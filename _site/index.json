{
  "api/FlowChartTemplate.html": {
    "href": "api/FlowChartTemplate.html",
    "title": "Namespace FlowChartTemplate | Geolocation",
    "keywords": "Namespace FlowChartTemplate Classes WeatherForecast"
  },
  "api/FlowChartTemplate.WeatherForecast.html": {
    "href": "api/FlowChartTemplate.WeatherForecast.html",
    "title": "Class WeatherForecast | Geolocation",
    "keywords": "Class WeatherForecast Inheritance object WeatherForecast Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FlowChartTemplate Assembly: FlowChartTemplate.dll Syntax public class WeatherForecast Properties Name Type Description Summary string Properties Name Type Description ToString() Properties Name Type Description operator +(WeatherForecast) Properties | Improve this Doc View Source Summary Declaration public string? Summary { get; set; } Property Value Type Description string Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides Object.ToString() Operators | Improve this Doc View Source operator +(WeatherForecast) Declaration public static WeatherForecast operator +(WeatherForecast a) Parameters Type Name Description WeatherForecast a Returns Type Description WeatherForecast"
  },
  "api/Geolocation.App.AppSetting.html": {
    "href": "api/Geolocation.App.AppSetting.html",
    "title": "Class AppSetting | Geolocation",
    "keywords": "Class AppSetting Inheritance object AppSetting Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.App Assembly: Geolocation.App.dll Syntax public class AppSetting Properties Name Type Description CronSchedule string Время запуска в кроне Token string Токен dadata Properties | Improve this Doc View Source CronSchedule Время запуска в кроне Declaration public string CronSchedule { get; set; } Property Value Type Description string | Improve this Doc View Source Token Токен dadata Declaration public string Token { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.App.Controllers.AddressesController.html": {
    "href": "api/Geolocation.App.Controllers.AddressesController.html",
    "title": "Class AddressesController | Geolocation",
    "keywords": "Class AddressesController Inheritance object ControllerBase AddressesController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.App.Controllers Assembly: Geolocation.App.dll Syntax [ApiController] [Route(\"api/[controller]\")] public class AddressesController : ControllerBase Properties Name Type Description AddressesController(IRepository<IAddress>, IRunner, ILogger<AddressesController>) Properties Name Type Description Get() Список адресов. Insert(AddressDto) Список адресов. Remove() Список адресов. Constructors | Improve this Doc View Source AddressesController(IRepository<IAddress>, IRunner, ILogger<AddressesController>) Declaration public AddressesController(IRepository<IAddress> context, IRunner job, ILogger<AddressesController> logger) Parameters Type Name Description IRepository<IAddress> context IRunner job ILogger<AddressesController> logger Methods | Improve this Doc View Source Get() Список адресов. Declaration [HttpGet] [ProducesDefaultResponseType(typeof(ProblemDetails))] [ProducesResponseType(typeof(IEnumerable<IAddress>), 200)] public Task<IActionResult> Get() Returns Type Description Task<IActionResult> | Improve this Doc View Source Insert(AddressDto) Список адресов. Declaration [HttpPost] [ProducesDefaultResponseType(typeof(ProblemDetails))] [ProducesResponseType(200)] public Task<IActionResult> Insert(AddressDto address) Parameters Type Name Description AddressDto address Returns Type Description Task<IActionResult> | Improve this Doc View Source Remove() Список адресов. Declaration [HttpDelete] [ProducesDefaultResponseType(typeof(ProblemDetails))] [ProducesResponseType(200)] public Task<IActionResult> Remove() Returns Type Description Task<IActionResult>"
  },
  "api/Geolocation.App.Controllers.GeolocationController.html": {
    "href": "api/Geolocation.App.Controllers.GeolocationController.html",
    "title": "Class GeolocationController | Geolocation",
    "keywords": "Class GeolocationController Inheritance object ControllerBase GeolocationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.App.Controllers Assembly: Geolocation.App.dll Syntax [ApiController] [Route(\"api/[controller]\")] public class GeolocationController : ControllerBase Properties Name Type Description GeolocationController(ISuggestClientAsync, IDbContextSqlServer) Properties Name Type Description Get(double, double) Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. Insert(AddressDto) Constructors | Improve this Doc View Source GeolocationController(ISuggestClientAsync, IDbContextSqlServer) Declaration public GeolocationController(ISuggestClientAsync clientAsync, IDbContextSqlServer contextSql) Parameters Type Name Description Dadata.ISuggestClientAsync clientAsync IDbContextSqlServer contextSql Methods | Improve this Doc View Source Get(double, double) Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. Declaration [HttpGet] [ProducesDefaultResponseType(typeof(ProblemDetails))] [ProducesResponseType(typeof(AddressDto), 200)] public Task<IActionResult> Get(double lat, double lon) Parameters Type Name Description double lat Географическая широта double lon Географическая долгота Returns Type Description Task<IActionResult> | Improve this Doc View Source Insert(AddressDto) Declaration [HttpPost] [ProducesDefaultResponseType(typeof(ProblemDetails))] [ProducesResponseType(200)] public Task<IActionResult> Insert(AddressDto body) Parameters Type Name Description AddressDto body Returns Type Description Task<IActionResult>"
  },
  "api/Geolocation.App.Controllers.html": {
    "href": "api/Geolocation.App.Controllers.html",
    "title": "Namespace Geolocation.App.Controllers | Geolocation",
    "keywords": "Namespace Geolocation.App.Controllers Classes AddressesController GeolocationController"
  },
  "api/Geolocation.App.Example.html": {
    "href": "api/Geolocation.App.Example.html",
    "title": "Namespace Geolocation.App.Example | Geolocation",
    "keywords": "Namespace Geolocation.App.Example Classes SuggestClientTest TODO Remove test object"
  },
  "api/Geolocation.App.Example.SuggestClientTest.html": {
    "href": "api/Geolocation.App.Example.SuggestClientTest.html",
    "title": "Class SuggestClientTest | Geolocation",
    "keywords": "Class SuggestClientTest TODO Remove test object Inheritance object SuggestClientTest Implements Dadata.ISuggestClientAsync Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.App.Example Assembly: Geolocation.App.dll Syntax public class SuggestClientTest : ISuggestClientAsync Properties Name Type Description FindAddress(FindAddressRequest, CancellationToken) FindAddress(string, CancellationToken) FindAffiliated(FindAffiliatedRequest, CancellationToken) FindAffiliated(string, CancellationToken) FindBank(FindBankRequest, CancellationToken) FindBank(string, CancellationToken) FindFias(SuggestRequest, CancellationToken) FindFias(string, CancellationToken) FindParty(FindPartyRequest, CancellationToken) FindParty(string, CancellationToken) Geolocate(GeolocateRequest, CancellationToken) Geolocate(double, double, int, int, CancellationToken) Iplocate(string, string, CancellationToken) SuggestAddress(SuggestAddressRequest, CancellationToken) SuggestAddress(string, int, CancellationToken) SuggestBank(SuggestBankRequest, CancellationToken) SuggestBank(string, int, CancellationToken) SuggestEmail(SuggestRequest, CancellationToken) SuggestEmail(string, int, CancellationToken) SuggestFias(SuggestAddressRequest, CancellationToken) SuggestFias(string, int, CancellationToken) SuggestName(SuggestNameRequest, CancellationToken) SuggestName(string, int, CancellationToken) SuggestParty(SuggestPartyRequest, CancellationToken) SuggestParty(string, int, CancellationToken) Methods | Improve this Doc View Source FindAddress(FindAddressRequest, CancellationToken) Declaration public Task<SuggestResponse<Address>> FindAddress(FindAddressRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.FindAddressRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Address>> | Improve this Doc View Source FindAddress(string, CancellationToken) Declaration public Task<SuggestResponse<Address>> FindAddress(string query, CancellationToken cancellationToken = default) Parameters Type Name Description string query CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Address>> | Improve this Doc View Source FindAffiliated(FindAffiliatedRequest, CancellationToken) Declaration public Task<SuggestResponse<Party>> FindAffiliated(FindAffiliatedRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.FindAffiliatedRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Party>> | Improve this Doc View Source FindAffiliated(string, CancellationToken) Declaration public Task<SuggestResponse<Party>> FindAffiliated(string query, CancellationToken cancellationToken = default) Parameters Type Name Description string query CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Party>> | Improve this Doc View Source FindBank(FindBankRequest, CancellationToken) Declaration public Task<SuggestResponse<Bank>> FindBank(FindBankRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.FindBankRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Bank>> | Improve this Doc View Source FindBank(string, CancellationToken) Declaration public Task<SuggestResponse<Bank>> FindBank(string query, CancellationToken cancellationToken = default) Parameters Type Name Description string query CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Bank>> | Improve this Doc View Source FindFias(SuggestRequest, CancellationToken) Declaration public Task<SuggestResponse<FiasAddress>> FindFias(SuggestRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.SuggestRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<FiasAddress>> | Improve this Doc View Source FindFias(string, CancellationToken) Declaration public Task<SuggestResponse<FiasAddress>> FindFias(string query, CancellationToken cancellationToken = default) Parameters Type Name Description string query CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<FiasAddress>> | Improve this Doc View Source FindParty(FindPartyRequest, CancellationToken) Declaration public Task<SuggestResponse<Party>> FindParty(FindPartyRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.FindPartyRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Party>> | Improve this Doc View Source FindParty(string, CancellationToken) Declaration public Task<SuggestResponse<Party>> FindParty(string query, CancellationToken cancellationToken = default) Parameters Type Name Description string query CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Party>> | Improve this Doc View Source Geolocate(GeolocateRequest, CancellationToken) Declaration public Task<SuggestResponse<Address>> Geolocate(GeolocateRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.GeolocateRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Address>> | Improve this Doc View Source Geolocate(double, double, int, int, CancellationToken) Declaration public Task<SuggestResponse<Address>> Geolocate(double lat, double lon, int radius_meters = 100, int count = 5, CancellationToken cancellationToken = default) Parameters Type Name Description double lat double lon int radius_meters int count CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Address>> | Improve this Doc View Source Iplocate(string, string, CancellationToken) Declaration public Task<IplocateResponse> Iplocate(string ip, string language = \"ru\", CancellationToken cancellationToken = default) Parameters Type Name Description string ip string language CancellationToken cancellationToken Returns Type Description Task<IplocateResponse> | Improve this Doc View Source SuggestAddress(SuggestAddressRequest, CancellationToken) Declaration public Task<SuggestResponse<Address>> SuggestAddress(SuggestAddressRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.SuggestAddressRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Address>> | Improve this Doc View Source SuggestAddress(string, int, CancellationToken) Declaration public Task<SuggestResponse<Address>> SuggestAddress(string query, int count = 5, CancellationToken cancellationToken = default) Parameters Type Name Description string query int count CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Address>> | Improve this Doc View Source SuggestBank(SuggestBankRequest, CancellationToken) Declaration public Task<SuggestResponse<Bank>> SuggestBank(SuggestBankRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.SuggestBankRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Bank>> | Improve this Doc View Source SuggestBank(string, int, CancellationToken) Declaration public Task<SuggestResponse<Bank>> SuggestBank(string query, int count = 5, CancellationToken cancellationToken = default) Parameters Type Name Description string query int count CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Bank>> | Improve this Doc View Source SuggestEmail(SuggestRequest, CancellationToken) Declaration public Task<SuggestResponse<Email>> SuggestEmail(SuggestRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.SuggestRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Email>> | Improve this Doc View Source SuggestEmail(string, int, CancellationToken) Declaration public Task<SuggestResponse<Email>> SuggestEmail(string query, int count = 5, CancellationToken cancellationToken = default) Parameters Type Name Description string query int count CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Email>> | Improve this Doc View Source SuggestFias(SuggestAddressRequest, CancellationToken) Declaration public Task<SuggestResponse<FiasAddress>> SuggestFias(SuggestAddressRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.SuggestAddressRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<FiasAddress>> | Improve this Doc View Source SuggestFias(string, int, CancellationToken) Declaration public Task<SuggestResponse<FiasAddress>> SuggestFias(string query, int count = 5, CancellationToken cancellationToken = default) Parameters Type Name Description string query int count CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<FiasAddress>> | Improve this Doc View Source SuggestName(SuggestNameRequest, CancellationToken) Declaration public Task<SuggestResponse<Fullname>> SuggestName(SuggestNameRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.SuggestNameRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Fullname>> | Improve this Doc View Source SuggestName(string, int, CancellationToken) Declaration public Task<SuggestResponse<Fullname>> SuggestName(string query, int count = 5, CancellationToken cancellationToken = default) Parameters Type Name Description string query int count CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Fullname>> | Improve this Doc View Source SuggestParty(SuggestPartyRequest, CancellationToken) Declaration public Task<SuggestResponse<Party>> SuggestParty(SuggestPartyRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description Dadata.Model.SuggestPartyRequest request CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Party>> | Improve this Doc View Source SuggestParty(string, int, CancellationToken) Declaration public Task<SuggestResponse<Party>> SuggestParty(string query, int count = 5, CancellationToken cancellationToken = default) Parameters Type Name Description string query int count CancellationToken cancellationToken Returns Type Description Task<SuggestResponse<Party>> Implements Dadata.ISuggestClientAsync"
  },
  "api/Geolocation.App.Filter.ExceptionHandlerMiddleware.html": {
    "href": "api/Geolocation.App.Filter.ExceptionHandlerMiddleware.html",
    "title": "Class ExceptionHandlerMiddleware | Geolocation",
    "keywords": "Class ExceptionHandlerMiddleware Inheritance object ExceptionHandlerMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.App.Filter Assembly: Geolocation.App.dll Syntax public class ExceptionHandlerMiddleware Properties Name Type Description ExceptionHandlerMiddleware(RequestDelegate, ILogger<ExceptionHandlerMiddleware>) Properties Name Type Description Invoke(HttpContext) Constructors | Improve this Doc View Source ExceptionHandlerMiddleware(RequestDelegate, ILogger<ExceptionHandlerMiddleware>) Declaration public ExceptionHandlerMiddleware(RequestDelegate next, ILogger<ExceptionHandlerMiddleware> logger) Parameters Type Name Description RequestDelegate next ILogger<ExceptionHandlerMiddleware> logger Methods | Improve this Doc View Source Invoke(HttpContext) Declaration public Task Invoke(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description Task"
  },
  "api/Geolocation.App.Filter.html": {
    "href": "api/Geolocation.App.Filter.html",
    "title": "Namespace Geolocation.App.Filter | Geolocation",
    "keywords": "Namespace Geolocation.App.Filter Classes ExceptionHandlerMiddleware"
  },
  "api/Geolocation.App.html": {
    "href": "api/Geolocation.App.html",
    "title": "Namespace Geolocation.App | Geolocation",
    "keywords": "Namespace Geolocation.App Classes AppSetting Program Startup"
  },
  "api/Geolocation.App.Jobs.html": {
    "href": "api/Geolocation.App.Jobs.html",
    "title": "Namespace Geolocation.App.Jobs | Geolocation",
    "keywords": "Namespace Geolocation.App.Jobs Classes RemoveOldJob SchedulerConfiguratorExtension"
  },
  "api/Geolocation.App.Jobs.RemoveOldJob.html": {
    "href": "api/Geolocation.App.Jobs.RemoveOldJob.html",
    "title": "Class RemoveOldJob | Geolocation",
    "keywords": "Class RemoveOldJob Inheritance object RemoveOldJob Implements Quartz.IJob IRunner Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.App.Jobs Assembly: Geolocation.App.dll Syntax [DisallowConcurrentExecution] public class RemoveOldJob : IJob, IRunner Properties Name Type Description RemoveOldJob(IPublishEndpoint, ILogger<RemoveOldJob>, IRepository<IAddress>) Properties Name Type Description Execute(IJobExecutionContext) Run() Constructors | Improve this Doc View Source RemoveOldJob(IPublishEndpoint, ILogger<RemoveOldJob>, IRepository<IAddress>) Declaration public RemoveOldJob(IPublishEndpoint publishEndpoint, ILogger<RemoveOldJob> logger, IRepository<IAddress> repository) Parameters Type Name Description MassTransit.IPublishEndpoint publishEndpoint ILogger<RemoveOldJob> logger IRepository<IAddress> repository Methods | Improve this Doc View Source Execute(IJobExecutionContext) Declaration public Task Execute(IJobExecutionContext context) Parameters Type Name Description Quartz.IJobExecutionContext context Returns Type Description Task | Improve this Doc View Source Run() Declaration public Task Run() Returns Type Description Task Implements Quartz.IJob IRunner"
  },
  "api/Geolocation.App.Jobs.SchedulerConfiguratorExtension.html": {
    "href": "api/Geolocation.App.Jobs.SchedulerConfiguratorExtension.html",
    "title": "Class SchedulerConfiguratorExtension | Geolocation",
    "keywords": "Class SchedulerConfiguratorExtension Inheritance object SchedulerConfiguratorExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.App.Jobs Assembly: Geolocation.App.dll Syntax public static class SchedulerConfiguratorExtension Properties Name Type Description AddJobAndTrigger<T>(IServiceCollectionQuartzConfigurator, string) Methods | Improve this Doc View Source AddJobAndTrigger<T>(IServiceCollectionQuartzConfigurator, string) Declaration public static void AddJobAndTrigger<T>(this IServiceCollectionQuartzConfigurator quartz, string cron) where T : IJob Parameters Type Name Description Quartz.IServiceCollectionQuartzConfigurator quartz string cron Type Parameters Name Description T"
  },
  "api/Geolocation.App.Program.html": {
    "href": "api/Geolocation.App.Program.html",
    "title": "Class Program | Geolocation",
    "keywords": "Class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.App Assembly: Geolocation.App.dll Syntax public class Program Properties Name Type Description CreateHostBuilder(string[]) Main(string[]) Methods | Improve this Doc View Source CreateHostBuilder(string[]) Declaration public static IHostBuilder CreateHostBuilder(string[] args) Parameters Type Name Description string[] args Returns Type Description IHostBuilder | Improve this Doc View Source Main(string[]) Declaration public static void Main(string[] args) Parameters Type Name Description string[] args"
  },
  "api/Geolocation.App.Startup.html": {
    "href": "api/Geolocation.App.Startup.html",
    "title": "Class Startup | Geolocation",
    "keywords": "Class Startup Inheritance object Startup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.App Assembly: Geolocation.App.dll Syntax public class Startup Properties Name Type Description Startup(IConfiguration) Properties Name Type Description Configuration IConfiguration Properties Name Type Description Configure(IApplicationBuilder, IWebHostEnvironment, GeolocationContext) ConfigureServices(IServiceCollection) Constructors | Improve this Doc View Source Startup(IConfiguration) Declaration public Startup(IConfiguration configuration) Parameters Type Name Description IConfiguration configuration Properties | Improve this Doc View Source Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration Methods | Improve this Doc View Source Configure(IApplicationBuilder, IWebHostEnvironment, GeolocationContext) Declaration public void Configure(IApplicationBuilder app, IWebHostEnvironment env, GeolocationContext context) Parameters Type Name Description IApplicationBuilder app IWebHostEnvironment env GeolocationContext context | Improve this Doc View Source ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description IServiceCollection services"
  },
  "api/Geolocation.Client.AddressDto.html": {
    "href": "api/Geolocation.Client.AddressDto.html",
    "title": "Class AddressDto | Geolocation",
    "keywords": "Class AddressDto Inheritance object AddressDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Client Assembly: Geolocation.Client.dll Syntax public class AddressDto Properties Name Type Description CorrelationId Guid? Country string KladrId string PostalCode string Type AddressType? UnrestrictedValue string Value string Properties | Improve this Doc View Source CorrelationId Declaration [JsonProperty(\"correlationId\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public Guid? CorrelationId { get; set; } Property Value Type Description Guid? | Improve this Doc View Source Country Declaration [JsonProperty(\"country\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string Country { get; set; } Property Value Type Description string | Improve this Doc View Source KladrId Declaration [JsonProperty(\"kladrId\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string KladrId { get; set; } Property Value Type Description string | Improve this Doc View Source PostalCode Declaration [JsonProperty(\"postalCode\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string PostalCode { get; set; } Property Value Type Description string | Improve this Doc View Source Type Declaration [JsonProperty(\"type\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] [JsonConverter(typeof(StringEnumConverter))] public AddressType? Type { get; set; } Property Value Type Description AddressType? | Improve this Doc View Source UnrestrictedValue Declaration [JsonProperty(\"unrestrictedValue\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string UnrestrictedValue { get; set; } Property Value Type Description string | Improve this Doc View Source Value Declaration [JsonProperty(\"value\", Required = Required.Always)] [Required(AllowEmptyStrings = true)] public string Value { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Client.AddressType.html": {
    "href": "api/Geolocation.Client.AddressType.html",
    "title": "Enum AddressType | Geolocation",
    "keywords": "Enum AddressType Тип адреса Namespace: Geolocation.Client Assembly: Geolocation.Client.dll Syntax public enum AddressType Fields Name Description Syntax Home [EnumMember(Value = \"Home\")] Home = 1 Registration [EnumMember(Value = \"Registration\")] Registration = 0 Work [EnumMember(Value = \"Work\")] Work = 2"
  },
  "api/Geolocation.Client.ApiException-1.html": {
    "href": "api/Geolocation.Client.ApiException-1.html",
    "title": "Class ApiException<TResult> | Geolocation",
    "keywords": "Class ApiException<TResult> Inheritance object Exception ApiException ApiException<TResult> Implements ISerializable Inherited Members ApiException.StatusCode ApiException.Response ApiException.Headers ApiException.ToString() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Geolocation.Client Assembly: Geolocation.Client.dll Syntax public class ApiException<TResult> : ApiException, ISerializable Type Parameters Name Description TResult Properties Name Type Description ApiException(string, int, string, IReadOnlyDictionary<string, IEnumerable<string>>, TResult, Exception) Properties Name Type Description Result TResult Constructors | Improve this Doc View Source ApiException(string, int, string, IReadOnlyDictionary<string, IEnumerable<string>>, TResult, Exception) Declaration public ApiException(string message, int statusCode, string response, IReadOnlyDictionary<string, IEnumerable<string>> headers, TResult result, Exception innerException) Parameters Type Name Description string message int statusCode string response IReadOnlyDictionary<string, IEnumerable<string>> headers TResult result Exception innerException Properties | Improve this Doc View Source Result Declaration public TResult Result { get; } Property Value Type Description TResult Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Geolocation.Client.ApiException.html": {
    "href": "api/Geolocation.Client.ApiException.html",
    "title": "Class ApiException | Geolocation",
    "keywords": "Class ApiException Inheritance object Exception ApiException ApiException<TResult> Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Geolocation.Client Assembly: Geolocation.Client.dll Syntax public class ApiException : Exception, ISerializable Properties Name Type Description ApiException(string, int, string, IReadOnlyDictionary<string, IEnumerable<string>>, Exception) Properties Name Type Description Headers IReadOnlyDictionary<string, IEnumerable<string>> Response string StatusCode int Properties Name Type Description ToString() Constructors | Improve this Doc View Source ApiException(string, int, string, IReadOnlyDictionary<string, IEnumerable<string>>, Exception) Declaration public ApiException(string message, int statusCode, string response, IReadOnlyDictionary<string, IEnumerable<string>> headers, Exception innerException) Parameters Type Name Description string message int statusCode string response IReadOnlyDictionary<string, IEnumerable<string>> headers Exception innerException Properties | Improve this Doc View Source Headers Declaration public IReadOnlyDictionary<string, IEnumerable<string>> Headers { get; } Property Value Type Description IReadOnlyDictionary<string, IEnumerable<string>> | Improve this Doc View Source Response Declaration public string Response { get; } Property Value Type Description string | Improve this Doc View Source StatusCode Declaration public int StatusCode { get; } Property Value Type Description int Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides Exception.ToString() Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Geolocation.Client.Geolocation_Client.html": {
    "href": "api/Geolocation.Client.Geolocation_Client.html",
    "title": "Class Geolocation_Client | Geolocation",
    "keywords": "Class Geolocation_Client Inheritance object Geolocation_Client Implements IGeolocation_Client Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Client Assembly: Geolocation.Client.dll Syntax public class Geolocation_Client : IGeolocation_Client Properties Name Type Description Geolocation_Client(HttpClient) Properties Name Type Description JsonSerializerSettings Newtonsoft.Json.JsonSerializerSettings ReadResponseAsString bool Properties Name Type Description AddressesGETAsync() Список адресов. AddressesGETAsync(CancellationToken) Список адресов. AddressesPOSTAsync(AddressDto, CancellationToken) Список адресов. AddressesPOSTAsync(AddressDto) Список адресов. GeolocationGETAsync(double?, double?, CancellationToken) Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. GeolocationGETAsync(double?, double?) Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. ReadObjectResponseAsync<T>(HttpResponseMessage, IReadOnlyDictionary<string, IEnumerable<string>>, CancellationToken) Constructors | Improve this Doc View Source Geolocation_Client(HttpClient) Declaration public Geolocation_Client(HttpClient httpClient) Parameters Type Name Description HttpClient httpClient Properties | Improve this Doc View Source JsonSerializerSettings Declaration protected JsonSerializerSettings JsonSerializerSettings { get; } Property Value Type Description Newtonsoft.Json.JsonSerializerSettings | Improve this Doc View Source ReadResponseAsString Declaration public bool ReadResponseAsString { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source AddressesGETAsync() Список адресов. Declaration public Task<ICollection<IAddress>> AddressesGETAsync() Returns Type Description Task<ICollection<IAddress>> Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source AddressesGETAsync(CancellationToken) Список адресов. Declaration public Task<ICollection<IAddress>> AddressesGETAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that can be used by other objects or threads to receive notice of cancellation. Returns Type Description Task<ICollection<IAddress>> Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source AddressesPOSTAsync(AddressDto, CancellationToken) Список адресов. Declaration public Task AddressesPOSTAsync(AddressDto body, CancellationToken cancellationToken) Parameters Type Name Description AddressDto body CancellationToken cancellationToken A cancellation token that can be used by other objects or threads to receive notice of cancellation. Returns Type Description Task Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source AddressesPOSTAsync(AddressDto) Список адресов. Declaration public Task AddressesPOSTAsync(AddressDto body) Parameters Type Name Description AddressDto body Returns Type Description Task Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source GeolocationGETAsync(double?, double?, CancellationToken) Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. Declaration public Task<AddressDto> GeolocationGETAsync(double? lat, double? lon, CancellationToken cancellationToken) Parameters Type Name Description double? lat Географическая широта double? lon Географическая долгота CancellationToken cancellationToken A cancellation token that can be used by other objects or threads to receive notice of cancellation. Returns Type Description Task<AddressDto> Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source GeolocationGETAsync(double?, double?) Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. Declaration public Task<AddressDto> GeolocationGETAsync(double? lat, double? lon) Parameters Type Name Description double? lat Географическая широта double? lon Географическая долгота Returns Type Description Task<AddressDto> Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source ReadObjectResponseAsync<T>(HttpResponseMessage, IReadOnlyDictionary<string, IEnumerable<string>>, CancellationToken) Declaration protected virtual Task<Geolocation_Client.ObjectResponseResult<T>> ReadObjectResponseAsync<T>(HttpResponseMessage response, IReadOnlyDictionary<string, IEnumerable<string>> headers, CancellationToken cancellationToken) Parameters Type Name Description HttpResponseMessage response IReadOnlyDictionary<string, IEnumerable<string>> headers CancellationToken cancellationToken Returns Type Description Task<Geolocation_Client.ObjectResponseResult<T>> Type Parameters Name Description T Implements IGeolocation_Client"
  },
  "api/Geolocation.Client.Geolocation_Client.ObjectResponseResult-1.html": {
    "href": "api/Geolocation.Client.Geolocation_Client.ObjectResponseResult-1.html",
    "title": "Struct Geolocation_Client.ObjectResponseResult<T> | Geolocation",
    "keywords": "Struct Geolocation_Client.ObjectResponseResult<T> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Geolocation.Client Assembly: Geolocation.Client.dll Syntax protected struct Geolocation_Client.ObjectResponseResult<T> Type Parameters Name Description T Properties Name Type Description ObjectResponseResult(T, string) Properties Name Type Description Object T Text string Constructors | Improve this Doc View Source ObjectResponseResult(T, string) Declaration public ObjectResponseResult(T responseObject, string responseText) Parameters Type Name Description T responseObject string responseText Properties | Improve this Doc View Source Object Declaration public readonly T Object { get; } Property Value Type Description T | Improve this Doc View Source Text Declaration public readonly string Text { get; } Property Value Type Description string"
  },
  "api/Geolocation.Client.html": {
    "href": "api/Geolocation.Client.html",
    "title": "Namespace Geolocation.Client | Geolocation",
    "keywords": "Namespace Geolocation.Client Classes AddressDto ApiException ApiException<TResult> Geolocation_Client IAddress ProblemDetails Structs Geolocation_Client.ObjectResponseResult<T> Interfaces IGeolocation_Client Enums AddressType Тип адреса"
  },
  "api/Geolocation.Client.IAddress.html": {
    "href": "api/Geolocation.Client.IAddress.html",
    "title": "Class IAddress | Geolocation",
    "keywords": "Class IAddress Inheritance object IAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Client Assembly: Geolocation.Client.dll Syntax public class IAddress Properties Name Type Description CorrelationId Guid? Country string KladrId string PostalCode string Type AddressType? UnrestrictedValue string Value string Properties | Improve this Doc View Source CorrelationId Declaration [JsonProperty(\"correlationId\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public Guid? CorrelationId { get; set; } Property Value Type Description Guid? | Improve this Doc View Source Country Declaration [JsonProperty(\"country\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string Country { get; set; } Property Value Type Description string | Improve this Doc View Source KladrId Declaration [JsonProperty(\"kladrId\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string KladrId { get; set; } Property Value Type Description string | Improve this Doc View Source PostalCode Declaration [JsonProperty(\"postalCode\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string PostalCode { get; set; } Property Value Type Description string | Improve this Doc View Source Type Declaration [JsonProperty(\"type\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] [JsonConverter(typeof(StringEnumConverter))] public AddressType? Type { get; set; } Property Value Type Description AddressType? | Improve this Doc View Source UnrestrictedValue Declaration [JsonProperty(\"unrestrictedValue\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string UnrestrictedValue { get; set; } Property Value Type Description string | Improve this Doc View Source Value Declaration [JsonProperty(\"value\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string Value { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Client.IGeolocation_Client.html": {
    "href": "api/Geolocation.Client.IGeolocation_Client.html",
    "title": "Interface IGeolocation_Client | Geolocation",
    "keywords": "Interface IGeolocation_Client Namespace: Geolocation.Client Assembly: Geolocation.Client.dll Syntax public interface IGeolocation_Client Properties Name Type Description AddressesGETAsync() Список адресов. AddressesGETAsync(CancellationToken) Список адресов. AddressesPOSTAsync(AddressDto, CancellationToken) Список адресов. AddressesPOSTAsync(AddressDto) Список адресов. GeolocationGETAsync(double?, double?, CancellationToken) Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. GeolocationGETAsync(double?, double?) Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. Methods | Improve this Doc View Source AddressesGETAsync() Список адресов. Declaration Task<ICollection<IAddress>> AddressesGETAsync() Returns Type Description Task<ICollection<IAddress>> Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source AddressesGETAsync(CancellationToken) Список адресов. Declaration Task<ICollection<IAddress>> AddressesGETAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that can be used by other objects or threads to receive notice of cancellation. Returns Type Description Task<ICollection<IAddress>> Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source AddressesPOSTAsync(AddressDto, CancellationToken) Список адресов. Declaration Task AddressesPOSTAsync(AddressDto body, CancellationToken cancellationToken) Parameters Type Name Description AddressDto body CancellationToken cancellationToken A cancellation token that can be used by other objects or threads to receive notice of cancellation. Returns Type Description Task Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source AddressesPOSTAsync(AddressDto) Список адресов. Declaration Task AddressesPOSTAsync(AddressDto body) Parameters Type Name Description AddressDto body Returns Type Description Task Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source GeolocationGETAsync(double?, double?, CancellationToken) Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. Declaration Task<AddressDto> GeolocationGETAsync(double? lat, double? lon, CancellationToken cancellationToken) Parameters Type Name Description double? lat Географическая широта double? lon Географическая долгота CancellationToken cancellationToken A cancellation token that can be used by other objects or threads to receive notice of cancellation. Returns Type Description Task<AddressDto> Success Exceptions Type Condition ApiException A server side error occurred. | Improve this Doc View Source GeolocationGETAsync(double?, double?) Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. Declaration Task<AddressDto> GeolocationGETAsync(double? lat, double? lon) Parameters Type Name Description double? lat Географическая широта double? lon Географическая долгота Returns Type Description Task<AddressDto> Success Exceptions Type Condition ApiException A server side error occurred."
  },
  "api/Geolocation.Client.ProblemDetails.html": {
    "href": "api/Geolocation.Client.ProblemDetails.html",
    "title": "Class ProblemDetails | Geolocation",
    "keywords": "Class ProblemDetails Inheritance object ProblemDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Client Assembly: Geolocation.Client.dll Syntax public class ProblemDetails Properties Name Type Description AdditionalProperties IDictionary<string, object> Detail string Instance string Status int? Title string Type string Properties | Improve this Doc View Source AdditionalProperties Declaration [JsonExtensionData] public IDictionary<string, object> AdditionalProperties { get; set; } Property Value Type Description IDictionary<string, object> | Improve this Doc View Source Detail Declaration [JsonProperty(\"detail\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string Detail { get; set; } Property Value Type Description string | Improve this Doc View Source Instance Declaration [JsonProperty(\"instance\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string Instance { get; set; } Property Value Type Description string | Improve this Doc View Source Status Declaration [JsonProperty(\"status\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public int? Status { get; set; } Property Value Type Description int? | Improve this Doc View Source Title Declaration [JsonProperty(\"title\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string Title { get; set; } Property Value Type Description string | Improve this Doc View Source Type Declaration [JsonProperty(\"type\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public string Type { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Domain.Declare.AddressType.html": {
    "href": "api/Geolocation.Domain.Declare.AddressType.html",
    "title": "Enum AddressType | Geolocation",
    "keywords": "Enum AddressType Тип адреса Namespace: Geolocation.Domain.Declare Assembly: Geolocation.Domain.dll Syntax public enum AddressType : byte Fields Name Description Syntax Home фактический адрес проживания Home = 2 Registration Адрес регистрации Registration = 1 Work Адрес места работы Work = 3"
  },
  "api/Geolocation.Domain.Declare.html": {
    "href": "api/Geolocation.Domain.Declare.html",
    "title": "Namespace Geolocation.Domain.Declare | Geolocation",
    "keywords": "Namespace Geolocation.Domain.Declare Enums AddressType Тип адреса"
  },
  "api/Geolocation.Domain.Dto.AddressDto.html": {
    "href": "api/Geolocation.Domain.Dto.AddressDto.html",
    "title": "Class AddressDto | Geolocation",
    "keywords": "Class AddressDto Inheritance object AddressDto Implements IAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Domain.Dto Assembly: Geolocation.Domain.dll Syntax public class AddressDto : IAddress Properties Name Type Description CorrelationId Guid Country string KladrId string PostalCode string Type AddressType UnrestrictedValue string Value string Properties | Improve this Doc View Source CorrelationId Declaration public Guid CorrelationId { get; set; } Property Value Type Description Guid | Improve this Doc View Source Country Declaration public string Country { get; set; } Property Value Type Description string | Improve this Doc View Source KladrId Declaration [Required] public string KladrId { get; set; } Property Value Type Description string | Improve this Doc View Source PostalCode Declaration public string PostalCode { get; set; } Property Value Type Description string | Improve this Doc View Source Type Declaration public AddressType Type { get; set; } Property Value Type Description AddressType | Improve this Doc View Source UnrestrictedValue Declaration public string UnrestrictedValue { get; set; } Property Value Type Description string | Improve this Doc View Source Value Declaration [Required] public string Value { get; set; } Property Value Type Description string Implements IAddress"
  },
  "api/Geolocation.Domain.Dto.html": {
    "href": "api/Geolocation.Domain.Dto.html",
    "title": "Namespace Geolocation.Domain.Dto | Geolocation",
    "keywords": "Namespace Geolocation.Domain.Dto Classes AddressDto"
  },
  "api/Geolocation.Domain.Events.AddressNewEvent.html": {
    "href": "api/Geolocation.Domain.Events.AddressNewEvent.html",
    "title": "Class AddressNewEvent | Geolocation",
    "keywords": "Class AddressNewEvent Inheritance object AddressNewEvent Implements IAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Domain.Events Assembly: Geolocation.Domain.dll Syntax public class AddressNewEvent : IAddress Properties Name Type Description CorrelationId Guid Country string KladrId string PostalCode string Type AddressType UnrestrictedValue string Value string Properties | Improve this Doc View Source CorrelationId Declaration public Guid CorrelationId { get; set; } Property Value Type Description Guid | Improve this Doc View Source Country Declaration public string Country { get; set; } Property Value Type Description string | Improve this Doc View Source KladrId Declaration public string KladrId { get; set; } Property Value Type Description string | Improve this Doc View Source PostalCode Declaration public string PostalCode { get; set; } Property Value Type Description string | Improve this Doc View Source Type Declaration public AddressType Type { get; set; } Property Value Type Description AddressType | Improve this Doc View Source UnrestrictedValue Declaration public string UnrestrictedValue { get; set; } Property Value Type Description string | Improve this Doc View Source Value Declaration public string Value { get; set; } Property Value Type Description string Implements IAddress"
  },
  "api/Geolocation.Domain.Events.html": {
    "href": "api/Geolocation.Domain.Events.html",
    "title": "Namespace Geolocation.Domain.Events | Geolocation",
    "keywords": "Namespace Geolocation.Domain.Events Classes AddressNewEvent RemoveSagaEvent"
  },
  "api/Geolocation.Domain.Events.RemoveSagaEvent.html": {
    "href": "api/Geolocation.Domain.Events.RemoveSagaEvent.html",
    "title": "Class RemoveSagaEvent | Geolocation",
    "keywords": "Class RemoveSagaEvent Inheritance object RemoveSagaEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Domain.Events Assembly: Geolocation.Domain.dll Syntax public class RemoveSagaEvent Properties Name Type Description CorrelationId Guid Properties | Improve this Doc View Source CorrelationId Declaration public Guid CorrelationId { get; set; } Property Value Type Description Guid"
  },
  "api/Geolocation.Domain.Interfaces.html": {
    "href": "api/Geolocation.Domain.Interfaces.html",
    "title": "Namespace Geolocation.Domain.Interfaces | Geolocation",
    "keywords": "Namespace Geolocation.Domain.Interfaces Interfaces IAddress IAddressSaga IDbContextSqlServer IRepository<T> IRunner IUser IUserService"
  },
  "api/Geolocation.Domain.Interfaces.IAddress.html": {
    "href": "api/Geolocation.Domain.Interfaces.IAddress.html",
    "title": "Interface IAddress | Geolocation",
    "keywords": "Interface IAddress Namespace: Geolocation.Domain.Interfaces Assembly: Geolocation.Domain.dll Syntax public interface IAddress Properties Name Type Description CorrelationId Guid ID корреляции Country string KladrId string PostalCode string Type AddressType UnrestrictedValue string Value string Properties | Improve this Doc View Source CorrelationId ID корреляции Declaration Guid CorrelationId { get; set; } Property Value Type Description Guid | Improve this Doc View Source Country Declaration string Country { get; set; } Property Value Type Description string | Improve this Doc View Source KladrId Declaration string KladrId { get; set; } Property Value Type Description string | Improve this Doc View Source PostalCode Declaration string PostalCode { get; set; } Property Value Type Description string | Improve this Doc View Source Type Declaration AddressType Type { get; set; } Property Value Type Description AddressType | Improve this Doc View Source UnrestrictedValue Declaration string UnrestrictedValue { get; set; } Property Value Type Description string | Improve this Doc View Source Value Declaration string Value { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Domain.Interfaces.IAddressSaga.html": {
    "href": "api/Geolocation.Domain.Interfaces.IAddressSaga.html",
    "title": "Interface IAddressSaga | Geolocation",
    "keywords": "Interface IAddressSaga Inherited Members IAddress.CorrelationId IAddress.Value IAddress.UnrestrictedValue IAddress.PostalCode IAddress.Country IAddress.KladrId IAddress.Type Namespace: Geolocation.Domain.Interfaces Assembly: Geolocation.Domain.dll Syntax public interface IAddressSaga : IAddress Properties Name Type Description CurrentState string Текущее состояние DateCreate DateTime Дата создания DateUpdate DateTime Дата изменения Description string Комментарии Properties | Improve this Doc View Source CurrentState Текущее состояние Declaration string CurrentState { get; set; } Property Value Type Description string | Improve this Doc View Source DateCreate Дата создания Declaration DateTime DateCreate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateUpdate Дата изменения Declaration DateTime DateUpdate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Description Комментарии Declaration string Description { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Domain.Interfaces.IDbContextSqlServer.html": {
    "href": "api/Geolocation.Domain.Interfaces.IDbContextSqlServer.html",
    "title": "Interface IDbContextSqlServer | Geolocation",
    "keywords": "Interface IDbContextSqlServer Namespace: Geolocation.Domain.Interfaces Assembly: Geolocation.Domain.dll Syntax public interface IDbContextSqlServer Properties Name Type Description NewAddress(IAddress) Methods | Improve this Doc View Source NewAddress(IAddress) Declaration Task<int> NewAddress(IAddress address) Parameters Type Name Description IAddress address Returns Type Description Task<int>"
  },
  "api/Geolocation.Domain.Interfaces.IRepository-1.html": {
    "href": "api/Geolocation.Domain.Interfaces.IRepository-1.html",
    "title": "Interface IRepository<T> | Geolocation",
    "keywords": "Interface IRepository<T> Namespace: Geolocation.Domain.Interfaces Assembly: Geolocation.Domain.dll Syntax public interface IRepository<T> where T : class Type Parameters Name Description T Properties Name Type Description Get() GetOld() Insert(T) Methods | Improve this Doc View Source Get() Declaration Task<IList<T>> Get() Returns Type Description Task<IList<T>> | Improve this Doc View Source GetOld() Declaration Task<IList<T>> GetOld() Returns Type Description Task<IList<T>> | Improve this Doc View Source Insert(T) Declaration Task Insert(T entity) Parameters Type Name Description T entity Returns Type Description Task"
  },
  "api/Geolocation.Domain.Interfaces.IRunner.html": {
    "href": "api/Geolocation.Domain.Interfaces.IRunner.html",
    "title": "Interface IRunner | Geolocation",
    "keywords": "Interface IRunner Namespace: Geolocation.Domain.Interfaces Assembly: Geolocation.Domain.dll Syntax public interface IRunner Properties Name Type Description Run() Methods | Improve this Doc View Source Run() Declaration Task Run() Returns Type Description Task"
  },
  "api/Geolocation.Domain.Interfaces.IUser.html": {
    "href": "api/Geolocation.Domain.Interfaces.IUser.html",
    "title": "Interface IUser | Geolocation",
    "keywords": "Interface IUser Namespace: Geolocation.Domain.Interfaces Assembly: Geolocation.Domain.dll Syntax public interface IUser Properties Name Type Description FirstName string Id Guid LastName string RefreshTokens List<RefreshToken> Username string Properties | Improve this Doc View Source FirstName Declaration string FirstName { get; set; } Property Value Type Description string | Improve this Doc View Source Id Declaration Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source LastName Declaration string LastName { get; set; } Property Value Type Description string | Improve this Doc View Source RefreshTokens Declaration [JsonIgnore] List<RefreshToken> RefreshTokens { get; set; } Property Value Type Description List<RefreshToken> | Improve this Doc View Source Username Declaration string Username { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Domain.Interfaces.IUserService.html": {
    "href": "api/Geolocation.Domain.Interfaces.IUserService.html",
    "title": "Interface IUserService | Geolocation",
    "keywords": "Interface IUserService Namespace: Geolocation.Domain.Interfaces Assembly: Geolocation.Domain.dll Syntax public interface IUserService Properties Name Type Description Authenticate(AuthenticateRequest, string) GetAll() GetById(Guid) RefreshToken(string, string) RevokeToken(string, string) Methods | Improve this Doc View Source Authenticate(AuthenticateRequest, string) Declaration AuthenticateResponse Authenticate(AuthenticateRequest model, string ipAddress) Parameters Type Name Description AuthenticateRequest model string ipAddress Returns Type Description AuthenticateResponse | Improve this Doc View Source GetAll() Declaration IEnumerable<IUser> GetAll() Returns Type Description IEnumerable<IUser> | Improve this Doc View Source GetById(Guid) Declaration IUser GetById(Guid id) Parameters Type Name Description Guid id Returns Type Description IUser | Improve this Doc View Source RefreshToken(string, string) Declaration AuthenticateResponse RefreshToken(string token, string ipAddress) Parameters Type Name Description string token string ipAddress Returns Type Description AuthenticateResponse | Improve this Doc View Source RevokeToken(string, string) Declaration bool RevokeToken(string token, string ipAddress) Parameters Type Name Description string token string ipAddress Returns Type Description bool"
  },
  "api/Geolocation.Domain.Models.AuthenticateRequest.html": {
    "href": "api/Geolocation.Domain.Models.AuthenticateRequest.html",
    "title": "Class AuthenticateRequest | Geolocation",
    "keywords": "Class AuthenticateRequest Inheritance object AuthenticateRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Domain.Models Assembly: Geolocation.Domain.dll Syntax public class AuthenticateRequest Properties Name Type Description Password string Username string Properties | Improve this Doc View Source Password Declaration [Required] public string Password { get; set; } Property Value Type Description string | Improve this Doc View Source Username Declaration [Required] public string Username { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Domain.Models.AuthenticateResponse.html": {
    "href": "api/Geolocation.Domain.Models.AuthenticateResponse.html",
    "title": "Class AuthenticateResponse | Geolocation",
    "keywords": "Class AuthenticateResponse Inheritance object AuthenticateResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Domain.Models Assembly: Geolocation.Domain.dll Syntax public class AuthenticateResponse Properties Name Type Description AuthenticateResponse(IUser, string, string) Properties Name Type Description FirstName string Id Guid JwtToken string LastName string RefreshToken string Username string Constructors | Improve this Doc View Source AuthenticateResponse(IUser, string, string) Declaration public AuthenticateResponse(IUser user, string jwtToken, string refreshToken) Parameters Type Name Description IUser user string jwtToken string refreshToken Properties | Improve this Doc View Source FirstName Declaration public string FirstName { get; set; } Property Value Type Description string | Improve this Doc View Source Id Declaration public Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source JwtToken Declaration public string JwtToken { get; set; } Property Value Type Description string | Improve this Doc View Source LastName Declaration public string LastName { get; set; } Property Value Type Description string | Improve this Doc View Source RefreshToken Declaration [JsonIgnore] public string RefreshToken { get; set; } Property Value Type Description string | Improve this Doc View Source Username Declaration public string Username { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Domain.Models.html": {
    "href": "api/Geolocation.Domain.Models.html",
    "title": "Namespace Geolocation.Domain.Models | Geolocation",
    "keywords": "Namespace Geolocation.Domain.Models Classes AuthenticateRequest AuthenticateResponse RefreshToken RevokeTokenRequest"
  },
  "api/Geolocation.Domain.Models.RefreshToken.html": {
    "href": "api/Geolocation.Domain.Models.RefreshToken.html",
    "title": "Class RefreshToken | Geolocation",
    "keywords": "Class RefreshToken Inheritance object RefreshToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Domain.Models Assembly: Geolocation.Domain.dll Syntax public class RefreshToken Properties Name Type Description Created DateTime CreatedByIp string Expires DateTime Id Guid IsActive bool IsExpired bool ReplacedByToken string Revoked DateTime? RevokedByIp string Token string Properties | Improve this Doc View Source Created Declaration public DateTime Created { get; set; } Property Value Type Description DateTime | Improve this Doc View Source CreatedByIp Declaration public string CreatedByIp { get; set; } Property Value Type Description string | Improve this Doc View Source Expires Declaration public DateTime Expires { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Id Declaration public Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source IsActive Declaration public bool IsActive { get; } Property Value Type Description bool | Improve this Doc View Source IsExpired Declaration public bool IsExpired { get; } Property Value Type Description bool | Improve this Doc View Source ReplacedByToken Declaration public string ReplacedByToken { get; set; } Property Value Type Description string | Improve this Doc View Source Revoked Declaration public DateTime? Revoked { get; set; } Property Value Type Description DateTime? | Improve this Doc View Source RevokedByIp Declaration public string RevokedByIp { get; set; } Property Value Type Description string | Improve this Doc View Source Token Declaration public string Token { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Domain.Models.RevokeTokenRequest.html": {
    "href": "api/Geolocation.Domain.Models.RevokeTokenRequest.html",
    "title": "Class RevokeTokenRequest | Geolocation",
    "keywords": "Class RevokeTokenRequest Inheritance object RevokeTokenRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Domain.Models Assembly: Geolocation.Domain.dll Syntax public class RevokeTokenRequest Properties Name Type Description Token string Properties | Improve this Doc View Source Token Declaration public string Token { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Gateway.AppSettings.html": {
    "href": "api/Geolocation.Gateway.AppSettings.html",
    "title": "Class AppSettings | Geolocation",
    "keywords": "Class AppSettings Inheritance object AppSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Gateway Assembly: Geolocation.Gateway.dll Syntax public class AppSettings Properties Name Type Description Secret string Properties | Improve this Doc View Source Secret Declaration public string Secret { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Gateway.Controllers.html": {
    "href": "api/Geolocation.Gateway.Controllers.html",
    "title": "Namespace Geolocation.Gateway.Controllers | Geolocation",
    "keywords": "Namespace Geolocation.Gateway.Controllers Classes UsersController"
  },
  "api/Geolocation.Gateway.Controllers.UsersController.html": {
    "href": "api/Geolocation.Gateway.Controllers.UsersController.html",
    "title": "Class UsersController | Geolocation",
    "keywords": "Class UsersController Inheritance object ControllerBase UsersController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Gateway.Controllers Assembly: Geolocation.Gateway.dll Syntax [Authorize] [ApiController] [Route(\"api/[controller]\")] public class UsersController : ControllerBase Properties Name Type Description UsersController(IUserService) Properties Name Type Description Authenticate(AuthenticateRequest) GetAll() GetById(Guid) GetRefreshTokens(Guid) RefreshToken(string) RevokeToken(RevokeTokenRequest) Constructors | Improve this Doc View Source UsersController(IUserService) Declaration public UsersController(IUserService userService) Parameters Type Name Description IUserService userService Methods | Improve this Doc View Source Authenticate(AuthenticateRequest) Declaration [AllowAnonymous] [HttpPost(\"authenticate\")] public IActionResult Authenticate(AuthenticateRequest model) Parameters Type Name Description AuthenticateRequest model Returns Type Description IActionResult | Improve this Doc View Source GetAll() Declaration [HttpGet] public IActionResult GetAll() Returns Type Description IActionResult | Improve this Doc View Source GetById(Guid) Declaration [HttpGet(\"{id}\")] public IActionResult GetById(Guid id) Parameters Type Name Description Guid id Returns Type Description IActionResult | Improve this Doc View Source GetRefreshTokens(Guid) Declaration [HttpGet(\"{id}/refresh-tokens\")] public IActionResult GetRefreshTokens(Guid id) Parameters Type Name Description Guid id Returns Type Description IActionResult | Improve this Doc View Source RefreshToken(string) Declaration [AllowAnonymous] [HttpPost(\"refresh-token\")] public IActionResult RefreshToken(string refreshToken) Parameters Type Name Description string refreshToken Returns Type Description IActionResult | Improve this Doc View Source RevokeToken(RevokeTokenRequest) Declaration [HttpPost(\"revoke-token\")] public IActionResult RevokeToken(RevokeTokenRequest model) Parameters Type Name Description RevokeTokenRequest model Returns Type Description IActionResult"
  },
  "api/Geolocation.Gateway.html": {
    "href": "api/Geolocation.Gateway.html",
    "title": "Namespace Geolocation.Gateway | Geolocation",
    "keywords": "Namespace Geolocation.Gateway Classes AppSettings Program Startup UserService"
  },
  "api/Geolocation.Gateway.Program.html": {
    "href": "api/Geolocation.Gateway.Program.html",
    "title": "Class Program | Geolocation",
    "keywords": "Class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Gateway Assembly: Geolocation.Gateway.dll Syntax public class Program Properties Name Type Description CreateHostBuilder(string[]) Main(string[]) Methods | Improve this Doc View Source CreateHostBuilder(string[]) Declaration public static IHostBuilder CreateHostBuilder(string[] args) Parameters Type Name Description string[] args Returns Type Description IHostBuilder | Improve this Doc View Source Main(string[]) Declaration public static void Main(string[] args) Parameters Type Name Description string[] args"
  },
  "api/Geolocation.Gateway.Startup.html": {
    "href": "api/Geolocation.Gateway.Startup.html",
    "title": "Class Startup | Geolocation",
    "keywords": "Class Startup Inheritance object Startup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Gateway Assembly: Geolocation.Gateway.dll Syntax public class Startup Properties Name Type Description Startup(IConfiguration) Properties Name Type Description Configuration IConfiguration Properties Name Type Description Configure(IApplicationBuilder, IWebHostEnvironment, DataContext) ConfigureServices(IServiceCollection) Constructors | Improve this Doc View Source Startup(IConfiguration) Declaration public Startup(IConfiguration configuration) Parameters Type Name Description IConfiguration configuration Properties | Improve this Doc View Source Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration Methods | Improve this Doc View Source Configure(IApplicationBuilder, IWebHostEnvironment, DataContext) Declaration public void Configure(IApplicationBuilder app, IWebHostEnvironment env, DataContext context) Parameters Type Name Description IApplicationBuilder app IWebHostEnvironment env DataContext context | Improve this Doc View Source ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description IServiceCollection services"
  },
  "api/Geolocation.Gateway.UserService.html": {
    "href": "api/Geolocation.Gateway.UserService.html",
    "title": "Class UserService | Geolocation",
    "keywords": "Class UserService Inheritance object UserService Implements IUserService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Gateway Assembly: Geolocation.Gateway.dll Syntax public class UserService : IUserService Properties Name Type Description UserService(DataContext, IOptions<AppSettings>) Properties Name Type Description Authenticate(AuthenticateRequest, string) GetAll() GetById(Guid) RefreshToken(string, string) RevokeToken(string, string) Constructors | Improve this Doc View Source UserService(DataContext, IOptions<AppSettings>) Declaration public UserService(DataContext context, IOptions<AppSettings> appSettings) Parameters Type Name Description DataContext context IOptions<AppSettings> appSettings Methods | Improve this Doc View Source Authenticate(AuthenticateRequest, string) Declaration public AuthenticateResponse Authenticate(AuthenticateRequest model, string ipAddress) Parameters Type Name Description AuthenticateRequest model string ipAddress Returns Type Description AuthenticateResponse | Improve this Doc View Source GetAll() Declaration public IEnumerable<IUser> GetAll() Returns Type Description IEnumerable<IUser> | Improve this Doc View Source GetById(Guid) Declaration public IUser GetById(Guid id) Parameters Type Name Description Guid id Returns Type Description IUser | Improve this Doc View Source RefreshToken(string, string) Declaration public AuthenticateResponse RefreshToken(string token, string ipAddress) Parameters Type Name Description string token string ipAddress Returns Type Description AuthenticateResponse | Improve this Doc View Source RevokeToken(string, string) Declaration public bool RevokeToken(string token, string ipAddress) Parameters Type Name Description string token string ipAddress Returns Type Description bool Implements IUserService"
  },
  "api/Geolocation.Infrastructure.DataContext.html": {
    "href": "api/Geolocation.Infrastructure.DataContext.html",
    "title": "Class DataContext | Geolocation",
    "keywords": "Class DataContext Inheritance object DbContext DataContext Implements IInfrastructure<IServiceProvider> Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable IDisposable IAsyncDisposable IResettableService Inherited Members DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, Type) DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, string, Type) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.IDbContextPoolable.ClearLease() DbContext.IDbContextPoolable.SetLease(DbContextLease) DbContext.IDbContextPoolable.SnapshotConfiguration() DbContext.IResettableService.ResetState() DbContext.IResettableService.ResetStateAsync(CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.IDbContextDependencies.SetSource DbContext.IDbContextDependencies.EntityFinderFactory DbContext.IDbContextDependencies.QueryProvider DbContext.IDbContextDependencies.StateManager DbContext.IDbContextDependencies.ChangeDetector DbContext.IDbContextDependencies.EntityGraphAttacher DbContext.IDbContextDependencies.UpdateLogger DbContext.IDbContextDependencies.InfrastructureLogger DbContext.IInfrastructure<IServiceProvider>.Instance DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure Assembly: Geolocation.Infrastructure.dll Syntax public class DataContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IDisposable, IAsyncDisposable, IResettableService Properties Name Type Description DataContext(DbContextOptions<DataContext>) Properties Name Type Description Tokens DbSet<RefreshToken> Users DbSet<User> Properties Name Type Description OnModelCreating(ModelBuilder) Constructors | Improve this Doc View Source DataContext(DbContextOptions<DataContext>) Declaration public DataContext(DbContextOptions<DataContext> options) Parameters Type Name Description DbContextOptions<DataContext> options Properties | Improve this Doc View Source Tokens Declaration public DbSet<RefreshToken> Tokens { get; set; } Property Value Type Description DbSet<RefreshToken> | Improve this Doc View Source Users Declaration public DbSet<User> Users { get; set; } Property Value Type Description DbSet<User> Methods | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder builder) Parameters Type Name Description ModelBuilder builder Overrides DbContext.OnModelCreating(ModelBuilder) Implements Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T> Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable System.IDisposable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService"
  },
  "api/Geolocation.Infrastructure.DbContextSqlServer.html": {
    "href": "api/Geolocation.Infrastructure.DbContextSqlServer.html",
    "title": "Class DbContextSqlServer | Geolocation",
    "keywords": "Class DbContextSqlServer Inheritance object DbContextSqlServer Implements IDbContextSqlServer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure Assembly: Geolocation.Infrastructure.dll Syntax public sealed class DbContextSqlServer : IDbContextSqlServer Properties Name Type Description DbContextSqlServer(IConfiguration) Properties Name Type Description CreateConnection() NewAddress(IAddress) exec Geolocation_Address_add QueryAsync(IDbConnection, string, object, IDbTransaction, int?, CommandType?, CommandFlags, CancellationToken) QueryAsync<T>(IDbConnection, string, object, IDbTransaction, int?, CommandType?, CommandFlags, CancellationToken) Execute a query asynchronously using Task. Constructors | Improve this Doc View Source DbContextSqlServer(IConfiguration) Declaration public DbContextSqlServer(IConfiguration configuration) Parameters Type Name Description IConfiguration configuration Methods | Improve this Doc View Source CreateConnection() Declaration public IDbConnection CreateConnection() Returns Type Description IDbConnection | Improve this Doc View Source NewAddress(IAddress) exec Geolocation_Address_add Declaration public Task<int> NewAddress(IAddress address) Parameters Type Name Description IAddress address params AddressEntity Returns Type Description Task<int> | Improve this Doc View Source QueryAsync(IDbConnection, string, object, IDbTransaction, int?, CommandType?, CommandFlags, CancellationToken) Declaration public static Task<IEnumerable<dynamic>> QueryAsync(IDbConnection connection, string commandText, object parameters = null, IDbTransaction transaction = null, int? commandTimeout = null, CommandType? commandType = null, CommandFlags flags = CommandFlags.Buffered, CancellationToken cancellationToken = default) Parameters Type Name Description IDbConnection connection string commandText object parameters IDbTransaction transaction int? commandTimeout CommandType? commandType Dapper.CommandFlags flags CancellationToken cancellationToken Returns Type Description Task<IEnumerable<dynamic>> | Improve this Doc View Source QueryAsync<T>(IDbConnection, string, object, IDbTransaction, int?, CommandType?, CommandFlags, CancellationToken) Execute a query asynchronously using Task. Declaration public static Task<IEnumerable<T>> QueryAsync<T>(IDbConnection connection, string commandText, object parameters = null, IDbTransaction transaction = null, int? commandTimeout = null, CommandType? commandType = null, CommandFlags flags = CommandFlags.Buffered, CancellationToken cancellationToken = default) Parameters Type Name Description IDbConnection connection The connection to query on. string commandText The SQL to execute for the query. object parameters The parameters to pass, if any. IDbTransaction transaction The transaction to use, if any. int? commandTimeout The command timeout (in seconds). CommandType? commandType The type of command to execute. Dapper.CommandFlags flags CancellationToken cancellationToken Returns Type Description Task<IEnumerable<T>> Type Parameters Name Description T Remarks Note: each row can be accessed via \"dynamic\", or by casting to an IDictionary<string,object> Implements IDbContextSqlServer"
  },
  "api/Geolocation.Infrastructure.Entities.AddressEntity.html": {
    "href": "api/Geolocation.Infrastructure.Entities.AddressEntity.html",
    "title": "Class AddressEntity | Geolocation",
    "keywords": "Class AddressEntity Inheritance object AddressEntity Implements IAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Entities Assembly: Geolocation.Infrastructure.dll Syntax public class AddressEntity : IAddress Properties Name Type Description CorrelationId Guid Country string DateCreate DateTime Дата создания DateUpdate DateTime Дата изменения KladrId string PostalCode string Type AddressType UnrestrictedValue string Value string Properties | Improve this Doc View Source CorrelationId Declaration [Key] public Guid CorrelationId { get; set; } Property Value Type Description Guid | Improve this Doc View Source Country Declaration public string Country { get; set; } Property Value Type Description string | Improve this Doc View Source DateCreate Дата создания Declaration public DateTime DateCreate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateUpdate Дата изменения Declaration public DateTime DateUpdate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source KladrId Declaration public string KladrId { get; set; } Property Value Type Description string | Improve this Doc View Source PostalCode Declaration public string PostalCode { get; set; } Property Value Type Description string | Improve this Doc View Source Type Declaration public AddressType Type { get; set; } Property Value Type Description AddressType | Improve this Doc View Source UnrestrictedValue Declaration public string UnrestrictedValue { get; set; } Property Value Type Description string | Improve this Doc View Source Value Declaration public string Value { get; set; } Property Value Type Description string Implements IAddress"
  },
  "api/Geolocation.Infrastructure.Entities.AddressTypeEntity.html": {
    "href": "api/Geolocation.Infrastructure.Entities.AddressTypeEntity.html",
    "title": "Class AddressTypeEntity | Geolocation",
    "keywords": "Class AddressTypeEntity Inheritance object AddressTypeEntity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Entities Assembly: Geolocation.Infrastructure.dll Syntax public class AddressTypeEntity Properties Name Type Description Id AddressType Name string Properties | Improve this Doc View Source Id Declaration [Key] public AddressType Id { get; set; } Property Value Type Description AddressType | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description string"
  },
  "api/Geolocation.Infrastructure.Entities.html": {
    "href": "api/Geolocation.Infrastructure.Entities.html",
    "title": "Namespace Geolocation.Infrastructure.Entities | Geolocation",
    "keywords": "Namespace Geolocation.Infrastructure.Entities Classes AddressEntity AddressTypeEntity User"
  },
  "api/Geolocation.Infrastructure.Entities.User.html": {
    "href": "api/Geolocation.Infrastructure.Entities.User.html",
    "title": "Class User | Geolocation",
    "keywords": "Class User Inheritance object User Implements IUser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Entities Assembly: Geolocation.Infrastructure.dll Syntax public class User : IUser Properties Name Type Description FirstName string Id Guid LastName string Password string RefreshTokens List<RefreshToken> Username string Properties | Improve this Doc View Source FirstName Declaration public string FirstName { get; set; } Property Value Type Description string | Improve this Doc View Source Id Declaration public Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source LastName Declaration public string LastName { get; set; } Property Value Type Description string | Improve this Doc View Source Password Declaration [JsonIgnore] public string Password { get; set; } Property Value Type Description string | Improve this Doc View Source RefreshTokens Declaration [JsonIgnore] public List<RefreshToken> RefreshTokens { get; set; } Property Value Type Description List<RefreshToken> | Improve this Doc View Source Username Declaration public string Username { get; set; } Property Value Type Description string Implements IUser"
  },
  "api/Geolocation.Infrastructure.GeolocationContext.html": {
    "href": "api/Geolocation.Infrastructure.GeolocationContext.html",
    "title": "Class GeolocationContext | Geolocation",
    "keywords": "Class GeolocationContext Inheritance object DbContext MassTransit.EntityFrameworkCoreIntegration.SagaDbContext GeolocationContext Implements IInfrastructure<IServiceProvider> Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable IDisposable IAsyncDisposable IResettableService IRepository<IAddress> Inherited Members DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, Type) DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, string, Type) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.IDbContextPoolable.ClearLease() DbContext.IDbContextPoolable.SetLease(DbContextLease) DbContext.IDbContextPoolable.SnapshotConfiguration() DbContext.IResettableService.ResetState() DbContext.IResettableService.ResetStateAsync(CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.IDbContextDependencies.SetSource DbContext.IDbContextDependencies.EntityFinderFactory DbContext.IDbContextDependencies.QueryProvider DbContext.IDbContextDependencies.StateManager DbContext.IDbContextDependencies.ChangeDetector DbContext.IDbContextDependencies.EntityGraphAttacher DbContext.IDbContextDependencies.UpdateLogger DbContext.IDbContextDependencies.InfrastructureLogger DbContext.IInfrastructure<IServiceProvider>.Instance DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure Assembly: Geolocation.Infrastructure.dll Syntax public class GeolocationContext : SagaDbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IDisposable, IAsyncDisposable, IResettableService, IRepository<IAddress> Properties Name Type Description GeolocationContext(DbContextOptions<GeolocationContext>) Properties Name Type Description Addresses DbSet<AddressEntity> AddressSagas DbSet<AddressSaga> AddressTypes DbSet<AddressTypeEntity> Configurations IEnumerable<MassTransit.EntityFrameworkCoreIntegration.Mappings.ISagaClassMap> Properties Name Type Description Get() GetOld() Insert(IAddress) OnModelCreating(ModelBuilder) Constructors | Improve this Doc View Source GeolocationContext(DbContextOptions<GeolocationContext>) Declaration public GeolocationContext(DbContextOptions<GeolocationContext> options) Parameters Type Name Description DbContextOptions<GeolocationContext> options Properties | Improve this Doc View Source Addresses Declaration public DbSet<AddressEntity> Addresses { get; set; } Property Value Type Description DbSet<AddressEntity> | Improve this Doc View Source AddressSagas Declaration public DbSet<AddressSaga> AddressSagas { get; set; } Property Value Type Description DbSet<AddressSaga> | Improve this Doc View Source AddressTypes Declaration public DbSet<AddressTypeEntity> AddressTypes { get; set; } Property Value Type Description DbSet<AddressTypeEntity> | Improve this Doc View Source Configurations Declaration protected override IEnumerable<ISagaClassMap> Configurations { get; } Property Value Type Description IEnumerable<MassTransit.EntityFrameworkCoreIntegration.Mappings.ISagaClassMap> Overrides MassTransit.EntityFrameworkCoreIntegration.SagaDbContext.Configurations Methods | Improve this Doc View Source Get() Declaration public Task<IList<IAddress>> Get() Returns Type Description Task<IList<IAddress>> | Improve this Doc View Source GetOld() Declaration public Task<IList<IAddress>> GetOld() Returns Type Description Task<IList<IAddress>> | Improve this Doc View Source Insert(IAddress) Declaration public Task Insert(IAddress address) Parameters Type Name Description IAddress address Returns Type Description Task | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder builder) Parameters Type Name Description ModelBuilder builder Overrides MassTransit.EntityFrameworkCoreIntegration.SagaDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder) Implements Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T> Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable System.IDisposable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService IRepository<T>"
  },
  "api/Geolocation.Infrastructure.html": {
    "href": "api/Geolocation.Infrastructure.html",
    "title": "Namespace Geolocation.Infrastructure | Geolocation",
    "keywords": "Namespace Geolocation.Infrastructure Classes DataContext DbContextSqlServer GeolocationContext"
  },
  "api/Geolocation.Infrastructure.Interceptors.html": {
    "href": "api/Geolocation.Infrastructure.Interceptors.html",
    "title": "Namespace Geolocation.Infrastructure.Interceptors | Geolocation",
    "keywords": "Namespace Geolocation.Infrastructure.Interceptors Classes LogCommandInterceptor"
  },
  "api/Geolocation.Infrastructure.Interceptors.LogCommandInterceptor.html": {
    "href": "api/Geolocation.Infrastructure.Interceptors.LogCommandInterceptor.html",
    "title": "Class LogCommandInterceptor | Geolocation",
    "keywords": "Class LogCommandInterceptor Inheritance object DbCommandInterceptor LogCommandInterceptor Implements IDbCommandInterceptor IInterceptor Inherited Members DbCommandInterceptor.CommandCreating(CommandCorrelatedEventData, InterceptionResult<DbCommand>) DbCommandInterceptor.CommandCreated(CommandEndEventData, DbCommand) DbCommandInterceptor.ScalarExecuting(DbCommand, CommandEventData, InterceptionResult<object>) DbCommandInterceptor.NonQueryExecuting(DbCommand, CommandEventData, InterceptionResult<int>) DbCommandInterceptor.ScalarExecutingAsync(DbCommand, CommandEventData, InterceptionResult<object>, CancellationToken) DbCommandInterceptor.NonQueryExecutingAsync(DbCommand, CommandEventData, InterceptionResult<int>, CancellationToken) DbCommandInterceptor.ReaderExecuted(DbCommand, CommandExecutedEventData, DbDataReader) DbCommandInterceptor.ScalarExecuted(DbCommand, CommandExecutedEventData, object) DbCommandInterceptor.NonQueryExecuted(DbCommand, CommandExecutedEventData, int) DbCommandInterceptor.ReaderExecutedAsync(DbCommand, CommandExecutedEventData, DbDataReader, CancellationToken) DbCommandInterceptor.ScalarExecutedAsync(DbCommand, CommandExecutedEventData, object, CancellationToken) DbCommandInterceptor.NonQueryExecutedAsync(DbCommand, CommandExecutedEventData, int, CancellationToken) DbCommandInterceptor.DataReaderDisposing(DbCommand, DataReaderDisposingEventData, InterceptionResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Interceptors Assembly: Geolocation.Infrastructure.dll Syntax public class LogCommandInterceptor : DbCommandInterceptor, IDbCommandInterceptor, IInterceptor Properties Name Type Description LogCommandInterceptor(ILogger<LogCommandInterceptor>) Properties Name Type Description CommandFailed(DbCommand, CommandErrorEventData) CommandFailedAsync(DbCommand, CommandErrorEventData, CancellationToken) GetGeneratedQuery(DbCommand) TODO debug list params ReaderExecuting(DbCommand, CommandEventData, InterceptionResult<DbDataReader>) ReaderExecutingAsync(DbCommand, CommandEventData, InterceptionResult<DbDataReader>, CancellationToken) Constructors | Improve this Doc View Source LogCommandInterceptor(ILogger<LogCommandInterceptor>) Declaration public LogCommandInterceptor(ILogger<LogCommandInterceptor> logger) Parameters Type Name Description ILogger<LogCommandInterceptor> logger Methods | Improve this Doc View Source CommandFailed(DbCommand, CommandErrorEventData) Declaration public override void CommandFailed(DbCommand command, CommandErrorEventData eventData) Parameters Type Name Description DbCommand command CommandErrorEventData eventData Overrides DbCommandInterceptor.CommandFailed(DbCommand, CommandErrorEventData) | Improve this Doc View Source CommandFailedAsync(DbCommand, CommandErrorEventData, CancellationToken) Declaration public override Task CommandFailedAsync(DbCommand command, CommandErrorEventData eventData, CancellationToken cancellationToken = default) Parameters Type Name Description DbCommand command CommandErrorEventData eventData CancellationToken cancellationToken Returns Type Description Task Overrides DbCommandInterceptor.CommandFailedAsync(DbCommand, CommandErrorEventData, CancellationToken) | Improve this Doc View Source GetGeneratedQuery(DbCommand) TODO debug list params Declaration public static string GetGeneratedQuery(DbCommand dbCommand) Parameters Type Name Description DbCommand dbCommand Returns Type Description string | Improve this Doc View Source ReaderExecuting(DbCommand, CommandEventData, InterceptionResult<DbDataReader>) Declaration public override InterceptionResult<DbDataReader> ReaderExecuting(DbCommand command, CommandEventData eventData, InterceptionResult<DbDataReader> result) Parameters Type Name Description DbCommand command CommandEventData eventData InterceptionResult<DbDataReader> result Returns Type Description InterceptionResult<DbDataReader> Overrides DbCommandInterceptor.ReaderExecuting(DbCommand, CommandEventData, InterceptionResult<DbDataReader>) | Improve this Doc View Source ReaderExecutingAsync(DbCommand, CommandEventData, InterceptionResult<DbDataReader>, CancellationToken) Declaration public override ValueTask<InterceptionResult<DbDataReader>> ReaderExecutingAsync(DbCommand command, CommandEventData eventData, InterceptionResult<DbDataReader> result, CancellationToken cancellationToken = default) Parameters Type Name Description DbCommand command CommandEventData eventData InterceptionResult<DbDataReader> result CancellationToken cancellationToken Returns Type Description ValueTask<InterceptionResult<DbDataReader>> Overrides DbCommandInterceptor.ReaderExecutingAsync(DbCommand, CommandEventData, InterceptionResult<DbDataReader>, CancellationToken) Implements Microsoft.EntityFrameworkCore.Diagnostics.IDbCommandInterceptor Microsoft.EntityFrameworkCore.Diagnostics.IInterceptor"
  },
  "api/Geolocation.Infrastructure.Migrations.addData.html": {
    "href": "api/Geolocation.Infrastructure.Migrations.addData.html",
    "title": "Class addData | Geolocation",
    "keywords": "Class addData Inheritance object Migration addData Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Migrations Assembly: Geolocation.Infrastructure.dll Syntax [DbContext(typeof(GeolocationContext))] [Migration(\"20220322173034_addData\")] public class addData : Migration Properties Name Type Description BuildTargetModel(ModelBuilder) Down(MigrationBuilder) Up(MigrationBuilder) Methods | Improve this Doc View Source BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Overrides Migration.BuildTargetModel(ModelBuilder) | Improve this Doc View Source Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Down(MigrationBuilder) | Improve this Doc View Source Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Up(MigrationBuilder)"
  },
  "api/Geolocation.Infrastructure.Migrations.Data.default.html": {
    "href": "api/Geolocation.Infrastructure.Migrations.Data.default.html",
    "title": "Class default | Geolocation",
    "keywords": "Class default Inheritance object Migration default Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Migrations.Data Assembly: Geolocation.Infrastructure.dll Syntax [DbContext(typeof(DataContext))] [Migration(\"20220409154351_default\")] public class @default : Migration Properties Name Type Description BuildTargetModel(ModelBuilder) Down(MigrationBuilder) Up(MigrationBuilder) Methods | Improve this Doc View Source BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Overrides Migration.BuildTargetModel(ModelBuilder) | Improve this Doc View Source Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Down(MigrationBuilder) | Improve this Doc View Source Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Up(MigrationBuilder)"
  },
  "api/Geolocation.Infrastructure.Migrations.Data.html": {
    "href": "api/Geolocation.Infrastructure.Migrations.Data.html",
    "title": "Namespace Geolocation.Infrastructure.Migrations.Data | Geolocation",
    "keywords": "Namespace Geolocation.Infrastructure.Migrations.Data Classes default list owned user"
  },
  "api/Geolocation.Infrastructure.Migrations.Data.list.html": {
    "href": "api/Geolocation.Infrastructure.Migrations.Data.list.html",
    "title": "Class list | Geolocation",
    "keywords": "Class list Inheritance object Migration list Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Migrations.Data Assembly: Geolocation.Infrastructure.dll Syntax [DbContext(typeof(DataContext))] [Migration(\"20220409164546_list\")] public class list : Migration Properties Name Type Description BuildTargetModel(ModelBuilder) Down(MigrationBuilder) Up(MigrationBuilder) Methods | Improve this Doc View Source BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Overrides Migration.BuildTargetModel(ModelBuilder) | Improve this Doc View Source Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Down(MigrationBuilder) | Improve this Doc View Source Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Up(MigrationBuilder)"
  },
  "api/Geolocation.Infrastructure.Migrations.Data.owned.html": {
    "href": "api/Geolocation.Infrastructure.Migrations.Data.owned.html",
    "title": "Class owned | Geolocation",
    "keywords": "Class owned Inheritance object Migration owned Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Migrations.Data Assembly: Geolocation.Infrastructure.dll Syntax [DbContext(typeof(DataContext))] [Migration(\"20220409165158_owned\")] public class owned : Migration Properties Name Type Description BuildTargetModel(ModelBuilder) Down(MigrationBuilder) Up(MigrationBuilder) Methods | Improve this Doc View Source BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Overrides Migration.BuildTargetModel(ModelBuilder) | Improve this Doc View Source Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Down(MigrationBuilder) | Improve this Doc View Source Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Up(MigrationBuilder)"
  },
  "api/Geolocation.Infrastructure.Migrations.Data.user.html": {
    "href": "api/Geolocation.Infrastructure.Migrations.Data.user.html",
    "title": "Class user | Geolocation",
    "keywords": "Class user Inheritance object Migration user Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Migrations.Data Assembly: Geolocation.Infrastructure.dll Syntax [DbContext(typeof(DataContext))] [Migration(\"20220409154219_user\")] public class user : Migration Properties Name Type Description BuildTargetModel(ModelBuilder) Down(MigrationBuilder) Up(MigrationBuilder) Methods | Improve this Doc View Source BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Overrides Migration.BuildTargetModel(ModelBuilder) | Improve this Doc View Source Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Down(MigrationBuilder) | Improve this Doc View Source Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Up(MigrationBuilder)"
  },
  "api/Geolocation.Infrastructure.Migrations.html": {
    "href": "api/Geolocation.Infrastructure.Migrations.html",
    "title": "Namespace Geolocation.Infrastructure.Migrations | Geolocation",
    "keywords": "Namespace Geolocation.Infrastructure.Migrations Classes addData InitialCreate revertSaga"
  },
  "api/Geolocation.Infrastructure.Migrations.InitialCreate.html": {
    "href": "api/Geolocation.Infrastructure.Migrations.InitialCreate.html",
    "title": "Class InitialCreate | Geolocation",
    "keywords": "Class InitialCreate Inheritance object Migration InitialCreate Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Migrations Assembly: Geolocation.Infrastructure.dll Syntax [DbContext(typeof(GeolocationContext))] [Migration(\"20220319164931_InitialCreate\")] public class InitialCreate : Migration Properties Name Type Description BuildTargetModel(ModelBuilder) Down(MigrationBuilder) Up(MigrationBuilder) Methods | Improve this Doc View Source BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Overrides Migration.BuildTargetModel(ModelBuilder) | Improve this Doc View Source Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Down(MigrationBuilder) | Improve this Doc View Source Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Up(MigrationBuilder)"
  },
  "api/Geolocation.Infrastructure.Migrations.revertSaga.html": {
    "href": "api/Geolocation.Infrastructure.Migrations.revertSaga.html",
    "title": "Class revertSaga | Geolocation",
    "keywords": "Class revertSaga Inheritance object Migration revertSaga Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Migrations Assembly: Geolocation.Infrastructure.dll Syntax [DbContext(typeof(GeolocationContext))] [Migration(\"20220330173253_revertSaga\")] public class revertSaga : Migration Properties Name Type Description BuildTargetModel(ModelBuilder) Down(MigrationBuilder) Up(MigrationBuilder) Methods | Improve this Doc View Source BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Overrides Migration.BuildTargetModel(ModelBuilder) | Improve this Doc View Source Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Down(MigrationBuilder) | Improve this Doc View Source Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Overrides Migration.Up(MigrationBuilder)"
  },
  "api/Geolocation.Infrastructure.Saga.AddressSaga.html": {
    "href": "api/Geolocation.Infrastructure.Saga.AddressSaga.html",
    "title": "Class AddressSaga | Geolocation",
    "keywords": "Class AddressSaga Сага Inheritance object AddressSaga Implements Automatonymous.SagaStateMachineInstance MassTransit.Saga.ISaga IAddress MassTransit.CorrelatedBy<TKey><Guid> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Saga Assembly: Geolocation.Infrastructure.dll Syntax public class AddressSaga : SagaStateMachineInstance, ISaga, IAddress, CorrelatedBy<Guid> Properties Name Type Description CorrelationId Guid Country string CurrentState string DateCreate DateTime DateUpdate DateTime Description string KladrId string PostalCode string Type AddressType UnrestrictedValue string Value string Properties | Improve this Doc View Source CorrelationId Declaration public Guid CorrelationId { get; set; } Property Value Type Description Guid | Improve this Doc View Source Country Declaration public string Country { get; set; } Property Value Type Description string | Improve this Doc View Source CurrentState Declaration public string CurrentState { get; set; } Property Value Type Description string | Improve this Doc View Source DateCreate Declaration public DateTime DateCreate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateUpdate Declaration public DateTime DateUpdate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Description Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source KladrId Declaration public string KladrId { get; set; } Property Value Type Description string | Improve this Doc View Source PostalCode Declaration public string PostalCode { get; set; } Property Value Type Description string | Improve this Doc View Source Type Declaration public AddressType Type { get; set; } Property Value Type Description AddressType | Improve this Doc View Source UnrestrictedValue Declaration public string UnrestrictedValue { get; set; } Property Value Type Description string | Improve this Doc View Source Value Declaration public string Value { get; set; } Property Value Type Description string Implements Automatonymous.SagaStateMachineInstance MassTransit.Saga.ISaga IAddress MassTransit.CorrelatedBy<TKey>"
  },
  "api/Geolocation.Infrastructure.Saga.AddressSagaDefinition.html": {
    "href": "api/Geolocation.Infrastructure.Saga.AddressSagaDefinition.html",
    "title": "Class AddressSagaDefinition | Geolocation",
    "keywords": "Class AddressSagaDefinition Inheritance object MassTransit.Definition.SagaDefinition<TSaga><AddressSaga> AddressSagaDefinition Implements MassTransit.Definition.ISagaDefinition<TSaga><AddressSaga> MassTransit.Definition.ISagaDefinition MassTransit.Definition.IDefinition Inherited Members MassTransit.Definition.SagaDefinition<Geolocation.Infrastructure.Saga.AddressSaga>.MassTransit.Definition.ISagaDefinition<Geolocation.Infrastructure.Saga.AddressSaga>.Configure(MassTransit.IReceiveEndpointConfigurator, MassTransit.ISagaConfigurator<Geolocation.Infrastructure.Saga.AddressSaga>) MassTransit.Definition.SagaDefinition<Geolocation.Infrastructure.Saga.AddressSaga>.MassTransit.Definition.ISagaDefinition.GetEndpointName(MassTransit.IEndpointNameFormatter) MassTransit.Definition.SagaDefinition<Geolocation.Infrastructure.Saga.AddressSaga>.Endpoint(System.Action<MassTransit.Registration.ISagaEndpointRegistrationConfigurator>) MassTransit.Definition.SagaDefinition<Geolocation.Infrastructure.Saga.AddressSaga>.EndpointName MassTransit.Definition.SagaDefinition<Geolocation.Infrastructure.Saga.AddressSaga>.EndpointDefinition MassTransit.Definition.SagaDefinition<Geolocation.Infrastructure.Saga.AddressSaga>.MassTransit.Definition.ISagaDefinition.EndpointDefinition MassTransit.Definition.SagaDefinition<Geolocation.Infrastructure.Saga.AddressSaga>.ConcurrentMessageLimit MassTransit.Definition.SagaDefinition<Geolocation.Infrastructure.Saga.AddressSaga>.MassTransit.Definition.ISagaDefinition.SagaType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Saga Assembly: Geolocation.Infrastructure.dll Syntax public class AddressSagaDefinition : SagaDefinition<AddressSaga>, ISagaDefinition<AddressSaga>, ISagaDefinition, IDefinition Properties Name Type Description ConfigureSaga(IReceiveEndpointConfigurator, ISagaConfigurator<AddressSaga>) Methods | Improve this Doc View Source ConfigureSaga(IReceiveEndpointConfigurator, ISagaConfigurator<AddressSaga>) Declaration protected override void ConfigureSaga(IReceiveEndpointConfigurator endpointConfigurator, ISagaConfigurator<AddressSaga> sagaConfigurator) Parameters Type Name Description MassTransit.IReceiveEndpointConfigurator endpointConfigurator MassTransit.ISagaConfigurator<TSaga><AddressSaga> sagaConfigurator Overrides MassTransit.Definition.SagaDefinition<Geolocation.Infrastructure.Saga.AddressSaga>.ConfigureSaga(MassTransit.IReceiveEndpointConfigurator, MassTransit.ISagaConfigurator<Geolocation.Infrastructure.Saga.AddressSaga>) Implements MassTransit.Definition.ISagaDefinition<TSaga> MassTransit.Definition.ISagaDefinition MassTransit.Definition.IDefinition"
  },
  "api/Geolocation.Infrastructure.Saga.AddressSagaStateMap.html": {
    "href": "api/Geolocation.Infrastructure.Saga.AddressSagaStateMap.html",
    "title": "Class AddressSagaStateMap | Geolocation",
    "keywords": "Class AddressSagaStateMap Inheritance object MassTransit.EntityFrameworkCoreIntegration.Mappings.SagaClassMap<TSaga><AddressSaga> AddressSagaStateMap Implements MassTransit.EntityFrameworkCoreIntegration.Mappings.ISagaClassMap<TSaga><AddressSaga> MassTransit.EntityFrameworkCoreIntegration.Mappings.ISagaClassMap Inherited Members MassTransit.EntityFrameworkCoreIntegration.Mappings.SagaClassMap<Geolocation.Infrastructure.Saga.AddressSaga>.Configure(Microsoft.EntityFrameworkCore.ModelBuilder) MassTransit.EntityFrameworkCoreIntegration.Mappings.SagaClassMap<Geolocation.Infrastructure.Saga.AddressSaga>.ConfigureCorrelationIdKey(Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder) MassTransit.EntityFrameworkCoreIntegration.Mappings.SagaClassMap<Geolocation.Infrastructure.Saga.AddressSaga>.SagaType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Saga Assembly: Geolocation.Infrastructure.dll Syntax public class AddressSagaStateMap : SagaClassMap<AddressSaga>, ISagaClassMap<AddressSaga>, ISagaClassMap Properties Name Type Description Configure(EntityTypeBuilder<AddressSaga>, ModelBuilder) Methods | Improve this Doc View Source Configure(EntityTypeBuilder<AddressSaga>, ModelBuilder) Declaration protected override void Configure(EntityTypeBuilder<AddressSaga> entity, ModelBuilder model) Parameters Type Name Description EntityTypeBuilder<AddressSaga> entity ModelBuilder model Overrides MassTransit.EntityFrameworkCoreIntegration.Mappings.SagaClassMap<Geolocation.Infrastructure.Saga.AddressSaga>.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Geolocation.Infrastructure.Saga.AddressSaga>, Microsoft.EntityFrameworkCore.ModelBuilder) Implements MassTransit.EntityFrameworkCoreIntegration.Mappings.ISagaClassMap<TSaga> MassTransit.EntityFrameworkCoreIntegration.Mappings.ISagaClassMap"
  },
  "api/Geolocation.Infrastructure.Saga.AddressStateMachine.html": {
    "href": "api/Geolocation.Infrastructure.Saga.AddressStateMachine.html",
    "title": "Class AddressStateMachine | Geolocation",
    "keywords": "Class AddressStateMachine Inheritance object Automatonymous.AutomatonymousStateMachine<TInstance><AddressSaga> Automatonymous.MassTransitStateMachine<TInstance><AddressSaga> AddressStateMachine Implements Automatonymous.SagaStateMachine<TInstance><AddressSaga> Automatonymous.StateMachine<TInstance><AddressSaga> Automatonymous.StateMachine Automatonymous.Visitable GreenPipes.IProbeSite Inherited Members Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.SagaStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.IsCompleted(Geolocation.Infrastructure.Saga.AddressSaga) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.SetCompleted(System.Func<Geolocation.Infrastructure.Saga.AddressSaga, System.Threading.Tasks.Task<bool>>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.SetCompletedWhenFinalized() Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Event<T>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Event<T>>>, System.Action<Automatonymous.IEventCorrelationConfigurator<Geolocation.Infrastructure.Saga.AddressSaga, T>>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Event<TProperty, T>(System.Linq.Expressions.Expression<System.Func<TProperty>>, System.Linq.Expressions.Expression<System.Func<TProperty, Automatonymous.Event<T>>>, System.Action<Automatonymous.IEventCorrelationConfigurator<Geolocation.Infrastructure.Saga.AddressSaga, T>>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Event<T>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Event<T>>>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Event<T>(string) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Event<T>(string, System.Action<Automatonymous.IEventCorrelationConfigurator<Geolocation.Infrastructure.Saga.AddressSaga, T>>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse>>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, System.Guid?>>, System.Action<Automatonymous.IRequestConfigurator>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse>>>, System.Action<Automatonymous.IRequestConfigurator>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse>>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, System.Guid?>>, Automatonymous.RequestSettings) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse>>>, Automatonymous.RequestSettings) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse, TResponse2>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse, TResponse2>>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, System.Guid?>>, System.Action<Automatonymous.IRequestConfigurator>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse, TResponse2>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse, TResponse2>>>, System.Action<Automatonymous.IRequestConfigurator>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse, TResponse2>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse, TResponse2>>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, System.Guid?>>, Automatonymous.RequestSettings) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse, TResponse2>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse, TResponse2>>>, Automatonymous.RequestSettings) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse, TResponse2, TResponse3>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse, TResponse2, TResponse3>>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, System.Guid?>>, System.Action<Automatonymous.IRequestConfigurator>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse, TResponse2, TResponse3>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse, TResponse2, TResponse3>>>, System.Action<Automatonymous.IRequestConfigurator>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse, TResponse2, TResponse3>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse, TResponse2, TResponse3>>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, System.Guid?>>, Automatonymous.RequestSettings) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Request<TRequest, TResponse, TResponse2, TResponse3>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Request<Geolocation.Infrastructure.Saga.AddressSaga, TRequest, TResponse, TResponse2, TResponse3>>>, Automatonymous.RequestSettings) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Schedule<TMessage>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Schedule<Geolocation.Infrastructure.Saga.AddressSaga, TMessage>>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, System.Guid?>>, System.Action<Automatonymous.IScheduleConfigurator<Geolocation.Infrastructure.Saga.AddressSaga, TMessage>>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Schedule<TMessage>(System.Linq.Expressions.Expression<System.Func<Automatonymous.Schedule<Geolocation.Infrastructure.Saga.AddressSaga, TMessage>>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, System.Guid?>>, Automatonymous.ScheduleSettings<Geolocation.Infrastructure.Saga.AddressSaga, TMessage>) Automatonymous.MassTransitStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Correlations Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine.GetState(string) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.RaiseEvent(Automatonymous.EventContext<Geolocation.Infrastructure.Saga.AddressSaga>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.RaiseEvent<T>(Automatonymous.EventContext<Geolocation.Infrastructure.Saga.AddressSaga, T>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.GetState(string) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine.GetEvent(string) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine.NextEvents(Automatonymous.State) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.Visitable.Accept(Automatonymous.StateMachineVisitor) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Probe(GreenPipes.ProbeContext) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.ConnectEventObserver(Automatonymous.EventObserver<Geolocation.Infrastructure.Saga.AddressSaga>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.ConnectEventObserver(Automatonymous.Event, Automatonymous.EventObserver<Geolocation.Infrastructure.Saga.AddressSaga>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.ConnectStateObserver(Automatonymous.StateObserver<Geolocation.Infrastructure.Saga.AddressSaga>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.TryGetState(string, out Automatonymous.State<Geolocation.Infrastructure.Saga.AddressSaga>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.InstanceState(System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.State>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.InstanceState(System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, string>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.InstanceState(System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, int>>, params Automatonymous.State[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Name(string) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Event(System.Linq.Expressions.Expression<System.Func<Automatonymous.Event>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Event(string) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Event<TProperty, T>(System.Linq.Expressions.Expression<System.Func<TProperty>>, System.Linq.Expressions.Expression<System.Func<TProperty, Automatonymous.Event<T>>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.CompositeEvent(System.Linq.Expressions.Expression<System.Func<Automatonymous.Event>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.CompositeEventStatus>>, params Automatonymous.Event[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.CompositeEvent(System.Linq.Expressions.Expression<System.Func<Automatonymous.Event>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.CompositeEventStatus>>, Automatonymous.CompositeEventOptions, params Automatonymous.Event[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.CompositeEvent(System.Linq.Expressions.Expression<System.Func<Automatonymous.Event>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, int>>, params Automatonymous.Event[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.CompositeEvent(System.Linq.Expressions.Expression<System.Func<Automatonymous.Event>>, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, int>>, Automatonymous.CompositeEventOptions, params Automatonymous.Event[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.CompositeEvent(Automatonymous.Event, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.CompositeEventStatus>>, params Automatonymous.Event[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.CompositeEvent(Automatonymous.Event, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.CompositeEventStatus>>, Automatonymous.CompositeEventOptions, params Automatonymous.Event[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.CompositeEvent(Automatonymous.Event, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, int>>, params Automatonymous.Event[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.CompositeEvent(Automatonymous.Event, System.Linq.Expressions.Expression<System.Func<Geolocation.Infrastructure.Saga.AddressSaga, int>>, Automatonymous.CompositeEventOptions, params Automatonymous.Event[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.State(System.Linq.Expressions.Expression<System.Func<Automatonymous.State>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.State(string) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.State<TProperty>(System.Linq.Expressions.Expression<System.Func<TProperty>>, System.Linq.Expressions.Expression<System.Func<TProperty, Automatonymous.State>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.SubState(System.Linq.Expressions.Expression<System.Func<Automatonymous.State>>, Automatonymous.State) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.SubState(string, Automatonymous.State) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.SubState<TProperty>(System.Linq.Expressions.Expression<System.Func<TProperty>>, System.Linq.Expressions.Expression<System.Func<TProperty, Automatonymous.State>>, Automatonymous.State) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.During(Automatonymous.State, params Automatonymous.Binders.EventActivities<Geolocation.Infrastructure.Saga.AddressSaga>[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.During(Automatonymous.State, Automatonymous.State, params Automatonymous.Binders.EventActivities<Geolocation.Infrastructure.Saga.AddressSaga>[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.During(Automatonymous.State, Automatonymous.State, Automatonymous.State, params Automatonymous.Binders.EventActivities<Geolocation.Infrastructure.Saga.AddressSaga>[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.During(Automatonymous.State, Automatonymous.State, Automatonymous.State, Automatonymous.State, params Automatonymous.Binders.EventActivities<Geolocation.Infrastructure.Saga.AddressSaga>[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.During(System.Collections.Generic.IEnumerable<Automatonymous.State>, params Automatonymous.Binders.EventActivities<Geolocation.Infrastructure.Saga.AddressSaga>[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Initially(params Automatonymous.Binders.EventActivities<Geolocation.Infrastructure.Saga.AddressSaga>[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.DuringAny(params Automatonymous.Binders.EventActivities<Geolocation.Infrastructure.Saga.AddressSaga>[]) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Finally(System.Func<Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga>, Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.When(Automatonymous.Event) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.When(Automatonymous.Event, Automatonymous.StateMachineEventFilter<Geolocation.Infrastructure.Saga.AddressSaga>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.WhenEnter(Automatonymous.State, System.Func<Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga>, Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.WhenEnterAny(System.Func<Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga>, Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.WhenLeaveAny(System.Func<Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga>, Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.BeforeEnterAny(System.Func<Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.State>, Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.State>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.AfterLeaveAny(System.Func<Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.State>, Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.State>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.WhenLeave(Automatonymous.State, System.Func<Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga>, Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.BeforeEnter(Automatonymous.State, System.Func<Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.State>, Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.State>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.AfterLeave(Automatonymous.State, System.Func<Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.State>, Automatonymous.Binders.EventActivityBinder<Geolocation.Infrastructure.Saga.AddressSaga, Automatonymous.State>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.When<TData>(Automatonymous.Event<TData>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.When<TData>(Automatonymous.Event<TData>, Automatonymous.StateMachineEventFilter<Geolocation.Infrastructure.Saga.AddressSaga, TData>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Ignore(Automatonymous.Event) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Ignore<TData>(Automatonymous.Event<TData>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Ignore<TData>(Automatonymous.Event<TData>, Automatonymous.StateMachineEventFilter<Geolocation.Infrastructure.Saga.AddressSaga, TData>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.OnUnhandledEvent(Automatonymous.UnhandledEventCallback<Geolocation.Infrastructure.Saga.AddressSaga>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.New(System.Action<Automatonymous.Builder.StateMachineModifier<Geolocation.Infrastructure.Saga.AddressSaga>>) Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine.Name Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Accessor Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Initial Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Final Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.States Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Events Automatonymous.AutomatonymousStateMachine<Geolocation.Infrastructure.Saga.AddressSaga>.Automatonymous.StateMachine.InstanceType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Infrastructure.Saga Assembly: Geolocation.Infrastructure.dll Syntax public class AddressStateMachine : MassTransitStateMachine<AddressSaga>, SagaStateMachine<AddressSaga>, StateMachine<AddressSaga>, StateMachine, Visitable, IProbeSite Properties Name Type Description AddressStateMachine(ILogger<AddressStateMachine>) Properties Name Type Description AddressNew Automatonymous.Event<TData><AddressNewEvent> Новый Push Fault Automatonymous.State В ошибке FaultAddressNew Automatonymous.Event<TData><Fault<AddressNewEvent>> Произошла ошибка RemoveSaga Automatonymous.Event<TData><Fault<RemoveSagaEvent>> Удаление Sending Automatonymous.State Отправка Constructors | Improve this Doc View Source AddressStateMachine(ILogger<AddressStateMachine>) Declaration public AddressStateMachine(ILogger<AddressStateMachine> logger) Parameters Type Name Description ILogger<AddressStateMachine> logger Properties | Improve this Doc View Source AddressNew Новый Push Declaration public Event<AddressNewEvent> AddressNew { get; } Property Value Type Description Automatonymous.Event<TData><AddressNewEvent> | Improve this Doc View Source Fault В ошибке Declaration public State Fault { get; } Property Value Type Description Automatonymous.State | Improve this Doc View Source FaultAddressNew Произошла ошибка Declaration public Event<Fault<AddressNewEvent>> FaultAddressNew { get; } Property Value Type Description Automatonymous.Event<TData><Fault<AddressNewEvent>> | Improve this Doc View Source RemoveSaga Удаление Declaration public Event<Fault<RemoveSagaEvent>> RemoveSaga { get; } Property Value Type Description Automatonymous.Event<TData><Fault<RemoveSagaEvent>> | Improve this Doc View Source Sending Отправка Declaration public State Sending { get; } Property Value Type Description Automatonymous.State Implements Automatonymous.SagaStateMachine<TInstance> Automatonymous.StateMachine<TInstance> Automatonymous.StateMachine Automatonymous.Visitable GreenPipes.IProbeSite"
  },
  "api/Geolocation.Infrastructure.Saga.html": {
    "href": "api/Geolocation.Infrastructure.Saga.html",
    "title": "Namespace Geolocation.Infrastructure.Saga | Geolocation",
    "keywords": "Namespace Geolocation.Infrastructure.Saga Classes AddressSaga Сага AddressSagaDefinition AddressSagaStateMap AddressStateMachine"
  },
  "api/Geolocation.Test.html": {
    "href": "api/Geolocation.Test.html",
    "title": "Namespace Geolocation.Test | Geolocation",
    "keywords": "Namespace Geolocation.Test Classes Tests"
  },
  "api/Geolocation.Test.Tests.html": {
    "href": "api/Geolocation.Test.Tests.html",
    "title": "Class Tests | Geolocation",
    "keywords": "Class Tests Inheritance object Tests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.Test Assembly: Geolocation.Test.dll Syntax public class Tests Properties Name Type Description Test() Methods | Improve this Doc View Source Test() Declaration public void Test()"
  },
  "api/Geolocation.UI._Imports.html": {
    "href": "api/Geolocation.UI._Imports.html",
    "title": "Class _Imports | Geolocation",
    "keywords": "Class _Imports Inheritance object ComponentBase _Imports Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.IComponent.Attach(RenderHandle) ComponentBase.SetParametersAsync(ParameterView) ComponentBase.IHandleEvent.HandleEventAsync(EventCallbackWorkItem, object) ComponentBase.IHandleAfterRender.OnAfterRenderAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI Assembly: Geolocation.UI.dll Syntax public class _Imports : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Name Type Description BuildRenderTree(RenderTreeBuilder) Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/Geolocation.UI.App.html": {
    "href": "api/Geolocation.UI.App.html",
    "title": "Class App | Geolocation",
    "keywords": "Class App Inheritance object ComponentBase App Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.IComponent.Attach(RenderHandle) ComponentBase.SetParametersAsync(ParameterView) ComponentBase.IHandleEvent.HandleEventAsync(EventCallbackWorkItem, object) ComponentBase.IHandleAfterRender.OnAfterRenderAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI Assembly: Geolocation.UI.dll Syntax public class App : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Name Type Description BuildRenderTree(RenderTreeBuilder) Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/Geolocation.UI.Data.AddressService.html": {
    "href": "api/Geolocation.UI.Data.AddressService.html",
    "title": "Class AddressService | Geolocation",
    "keywords": "Class AddressService Inheritance object AddressService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI.Data Assembly: Geolocation.UI.dll Syntax public class AddressService Properties Name Type Description AddressService(IGeolocation_Client) Properties Name Type Description GetForecastAsync() Constructors | Improve this Doc View Source AddressService(IGeolocation_Client) Declaration public AddressService(IGeolocation_Client client) Parameters Type Name Description IGeolocation_Client client Methods | Improve this Doc View Source GetForecastAsync() Declaration public Task<List<AddressViewModel>> GetForecastAsync() Returns Type Description Task<List<AddressViewModel>>"
  },
  "api/Geolocation.UI.Data.GeolocationClientTest.html": {
    "href": "api/Geolocation.UI.Data.GeolocationClientTest.html",
    "title": "Class GeolocationClientTest | Geolocation",
    "keywords": "Class GeolocationClientTest Inheritance object GeolocationClientTest Implements IGeolocation_Client Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI.Data Assembly: Geolocation.UI.dll Syntax public class GeolocationClientTest : IGeolocation_Client Properties Name Type Description AddressesGETAsync() AddressesGETAsync(CancellationToken) AddressesPOSTAsync(AddressDto, CancellationToken) AddressesPOSTAsync(AddressDto) GeolocationGETAsync(double?, double?, CancellationToken) GeolocationGETAsync(double?, double?) Methods | Improve this Doc View Source AddressesGETAsync() Declaration public Task<ICollection<IAddress>> AddressesGETAsync() Returns Type Description Task<ICollection<IAddress>> | Improve this Doc View Source AddressesGETAsync(CancellationToken) Declaration public Task<ICollection<IAddress>> AddressesGETAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task<ICollection<IAddress>> | Improve this Doc View Source AddressesPOSTAsync(AddressDto, CancellationToken) Declaration public Task AddressesPOSTAsync(AddressDto body, CancellationToken cancellationToken) Parameters Type Name Description AddressDto body CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source AddressesPOSTAsync(AddressDto) Declaration public Task AddressesPOSTAsync(AddressDto body) Parameters Type Name Description AddressDto body Returns Type Description Task | Improve this Doc View Source GeolocationGETAsync(double?, double?, CancellationToken) Declaration public Task<AddressDto> GeolocationGETAsync(double? lat, double? lon, CancellationToken cancellationToken) Parameters Type Name Description double? lat double? lon CancellationToken cancellationToken Returns Type Description Task<AddressDto> | Improve this Doc View Source GeolocationGETAsync(double?, double?) Declaration public Task<AddressDto> GeolocationGETAsync(double? lat, double? lon) Parameters Type Name Description double? lat double? lon Returns Type Description Task<AddressDto> Implements IGeolocation_Client"
  },
  "api/Geolocation.UI.Data.html": {
    "href": "api/Geolocation.UI.Data.html",
    "title": "Namespace Geolocation.UI.Data | Geolocation",
    "keywords": "Namespace Geolocation.UI.Data Classes AddressService GeolocationClientTest"
  },
  "api/Geolocation.UI.html": {
    "href": "api/Geolocation.UI.html",
    "title": "Namespace Geolocation.UI | Geolocation",
    "keywords": "Namespace Geolocation.UI Classes _Imports App"
  },
  "api/Geolocation.UI.ModelsView.AddressViewModel.html": {
    "href": "api/Geolocation.UI.ModelsView.AddressViewModel.html",
    "title": "Class AddressViewModel | Geolocation",
    "keywords": "Class AddressViewModel Inheritance object AddressViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI.ModelsView Assembly: Geolocation.UI.dll Syntax public class AddressViewModel Properties Name Type Description CorrelationId Guid? Date DateTime Value string Properties Name Type Description implicit operator AddressViewModel(IAddress) Properties | Improve this Doc View Source CorrelationId Declaration [Key] public Guid? CorrelationId { get; set; } Property Value Type Description Guid? | Improve this Doc View Source Date Declaration public DateTime Date { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Value Declaration public string Value { get; set; } Property Value Type Description string Operators | Improve this Doc View Source implicit operator AddressViewModel(IAddress) Declaration public static implicit operator AddressViewModel(IAddress address) Parameters Type Name Description IAddress address Returns Type Description AddressViewModel"
  },
  "api/Geolocation.UI.ModelsView.html": {
    "href": "api/Geolocation.UI.ModelsView.html",
    "title": "Namespace Geolocation.UI.ModelsView | Geolocation",
    "keywords": "Namespace Geolocation.UI.ModelsView Classes AddressViewModel"
  },
  "api/Geolocation.UI.Pages.ErrorModel.html": {
    "href": "api/Geolocation.UI.Pages.ErrorModel.html",
    "title": "Class ErrorModel | Geolocation",
    "keywords": "Class ErrorModel Inheritance object PageModel ErrorModel Implements IAsyncPageFilter IPageFilter IFilterMetadata Inherited Members PageModel.TryUpdateModelAsync<TModel>(TModel) PageModel.TryUpdateModelAsync<TModel>(TModel, string) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) PageModel.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync(object, Type, string) PageModel.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.BadRequest() PageModel.BadRequest(object) PageModel.BadRequest(ModelStateDictionary) PageModel.Challenge() PageModel.Challenge(params string[]) PageModel.Challenge(AuthenticationProperties) PageModel.Challenge(AuthenticationProperties, params string[]) PageModel.Content(string) PageModel.Content(string, string) PageModel.Content(string, string, Encoding) PageModel.Content(string, MediaTypeHeaderValue) PageModel.Forbid() PageModel.Forbid(params string[]) PageModel.Forbid(AuthenticationProperties) PageModel.Forbid(AuthenticationProperties, params string[]) PageModel.File(byte[], string) PageModel.File(byte[], string, string) PageModel.File(Stream, string) PageModel.File(Stream, string, string) PageModel.File(string, string) PageModel.File(string, string, string) PageModel.LocalRedirect(string) PageModel.LocalRedirectPermanent(string) PageModel.LocalRedirectPreserveMethod(string) PageModel.LocalRedirectPermanentPreserveMethod(string) PageModel.NotFound() PageModel.NotFound(object) PageModel.Page() PageModel.PhysicalFile(string, string) PageModel.PhysicalFile(string, string, string) PageModel.Redirect(string) PageModel.RedirectPermanent(string) PageModel.RedirectPreserveMethod(string) PageModel.RedirectPermanentPreserveMethod(string) PageModel.RedirectToAction(string) PageModel.RedirectToAction(string, object) PageModel.RedirectToAction(string, string) PageModel.RedirectToAction(string, string, object) PageModel.RedirectToAction(string, string, string) PageModel.RedirectToAction(string, string, object, string) PageModel.RedirectToActionPreserveMethod(string, string, object, string) PageModel.RedirectToActionPermanent(string) PageModel.RedirectToActionPermanent(string, object) PageModel.RedirectToActionPermanent(string, string) PageModel.RedirectToActionPermanent(string, string, string) PageModel.RedirectToActionPermanent(string, string, object) PageModel.RedirectToActionPermanent(string, string, object, string) PageModel.RedirectToActionPermanentPreserveMethod(string, string, object, string) PageModel.RedirectToRoute(string) PageModel.RedirectToRoute(object) PageModel.RedirectToRoute(string, object) PageModel.RedirectToRoute(string, string) PageModel.RedirectToRoute(string, object, string) PageModel.RedirectToRoutePreserveMethod(string, object, string) PageModel.RedirectToRoutePermanent(string) PageModel.RedirectToRoutePermanent(object) PageModel.RedirectToRoutePermanent(string, object) PageModel.RedirectToRoutePermanent(string, string) PageModel.RedirectToRoutePermanent(string, object, string) PageModel.RedirectToRoutePermanentPreserveMethod(string, object, string) PageModel.RedirectToPage() PageModel.RedirectToPage(object) PageModel.RedirectToPage(string) PageModel.RedirectToPage(string, string) PageModel.RedirectToPage(string, string, object) PageModel.RedirectToPage(string, object) PageModel.RedirectToPage(string, string, string) PageModel.RedirectToPage(string, string, object, string) PageModel.RedirectToPagePermanent(string) PageModel.RedirectToPagePermanent(string, object) PageModel.RedirectToPagePermanent(string, string) PageModel.RedirectToPagePermanent(string, string, object) PageModel.RedirectToPagePermanent(string, string, string) PageModel.RedirectToPagePermanent(string, object, string) PageModel.RedirectToPagePermanent(string, string, object, string) PageModel.RedirectToPagePreserveMethod(string, string, object, string) PageModel.RedirectToPagePermanentPreserveMethod(string, string, object, string) PageModel.SignIn(ClaimsPrincipal, string) PageModel.SignIn(ClaimsPrincipal, AuthenticationProperties, string) PageModel.SignOut(params string[]) PageModel.SignOut(AuthenticationProperties, params string[]) PageModel.StatusCode(int) PageModel.StatusCode(int, object) PageModel.Unauthorized() PageModel.Partial(string) PageModel.Partial(string, object) PageModel.ViewComponent(string) PageModel.ViewComponent(Type) PageModel.ViewComponent(string, object) PageModel.ViewComponent(Type, object) PageModel.TryValidateModel(object) PageModel.TryValidateModel(object, string) PageModel.OnPageHandlerSelected(PageHandlerSelectedContext) PageModel.OnPageHandlerExecuting(PageHandlerExecutingContext) PageModel.OnPageHandlerExecuted(PageHandlerExecutedContext) PageModel.OnPageHandlerSelectionAsync(PageHandlerSelectedContext) PageModel.OnPageHandlerExecutionAsync(PageHandlerExecutingContext, PageHandlerExecutionDelegate) PageModel.PageContext PageModel.HttpContext PageModel.Request PageModel.Response PageModel.RouteData PageModel.ModelState PageModel.User PageModel.TempData PageModel.Url PageModel.MetadataProvider PageModel.ViewData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI.Pages Assembly: Geolocation.UI.dll Syntax [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] [IgnoreAntiforgeryToken] public class ErrorModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Properties Name Type Description ErrorModel(ILogger<ErrorModel>) Properties Name Type Description RequestId string ShowRequestId bool Properties Name Type Description OnGet() Constructors | Improve this Doc View Source ErrorModel(ILogger<ErrorModel>) Declaration public ErrorModel(ILogger<ErrorModel> logger) Parameters Type Name Description ILogger<ErrorModel> logger Properties | Improve this Doc View Source RequestId Declaration public string? RequestId { get; set; } Property Value Type Description string | Improve this Doc View Source ShowRequestId Declaration public bool ShowRequestId { get; } Property Value Type Description bool Methods | Improve this Doc View Source OnGet() Declaration public void OnGet() Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/Geolocation.UI.Pages.html": {
    "href": "api/Geolocation.UI.Pages.html",
    "title": "Namespace Geolocation.UI.Pages | Geolocation",
    "keywords": "Namespace Geolocation.UI.Pages Classes ErrorModel Index"
  },
  "api/Geolocation.UI.Pages.Index.html": {
    "href": "api/Geolocation.UI.Pages.Index.html",
    "title": "Class Index | Geolocation",
    "keywords": "Class Index Inheritance object ComponentBase Index Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.IComponent.Attach(RenderHandle) ComponentBase.SetParametersAsync(ParameterView) ComponentBase.IHandleEvent.HandleEventAsync(EventCallbackWorkItem, object) ComponentBase.IHandleAfterRender.OnAfterRenderAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI.Pages Assembly: Geolocation.UI.dll Syntax [Route(\"/\")] public class Index : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Name Type Description BuildRenderTree(RenderTreeBuilder) Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/Geolocation.UI.Shared.AddressTable.html": {
    "href": "api/Geolocation.UI.Shared.AddressTable.html",
    "title": "Class AddressTable | Geolocation",
    "keywords": "Class AddressTable Inheritance object ComponentBase AddressTable Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.IComponent.Attach(RenderHandle) ComponentBase.SetParametersAsync(ParameterView) ComponentBase.IHandleEvent.HandleEventAsync(EventCallbackWorkItem, object) ComponentBase.IHandleAfterRender.OnAfterRenderAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI.Shared Assembly: Geolocation.UI.dll Syntax public class AddressTable : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Name Type Description BuildRenderTree(RenderTreeBuilder) OnInitializedAsync() Refresh() Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder) | Improve this Doc View Source OnInitializedAsync() Declaration protected override Task OnInitializedAsync() Returns Type Description Task Overrides ComponentBase.OnInitializedAsync() | Improve this Doc View Source Refresh() Declaration public Task Refresh() Returns Type Description Task Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/Geolocation.UI.Shared.html": {
    "href": "api/Geolocation.UI.Shared.html",
    "title": "Namespace Geolocation.UI.Shared | Geolocation",
    "keywords": "Namespace Geolocation.UI.Shared Classes AddressTable MainLayout NavMenu SurveyPrompt"
  },
  "api/Geolocation.UI.Shared.MainLayout.html": {
    "href": "api/Geolocation.UI.Shared.MainLayout.html",
    "title": "Class MainLayout | Geolocation",
    "keywords": "Class MainLayout Inheritance object ComponentBase LayoutComponentBase MainLayout Implements IComponent IHandleEvent IHandleAfterRender Inherited Members LayoutComponentBase.SetParametersAsync(ParameterView) LayoutComponentBase.Body ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.IComponent.Attach(RenderHandle) ComponentBase.IHandleEvent.HandleEventAsync(EventCallbackWorkItem, object) ComponentBase.IHandleAfterRender.OnAfterRenderAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI.Shared Assembly: Geolocation.UI.dll Syntax public class MainLayout : LayoutComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Name Type Description BuildRenderTree(RenderTreeBuilder) Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/Geolocation.UI.Shared.NavMenu.html": {
    "href": "api/Geolocation.UI.Shared.NavMenu.html",
    "title": "Class NavMenu | Geolocation",
    "keywords": "Class NavMenu Inheritance object ComponentBase NavMenu Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.IComponent.Attach(RenderHandle) ComponentBase.SetParametersAsync(ParameterView) ComponentBase.IHandleEvent.HandleEventAsync(EventCallbackWorkItem, object) ComponentBase.IHandleAfterRender.OnAfterRenderAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI.Shared Assembly: Geolocation.UI.dll Syntax public class NavMenu : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Name Type Description BuildRenderTree(RenderTreeBuilder) Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/Geolocation.UI.Shared.SurveyPrompt.html": {
    "href": "api/Geolocation.UI.Shared.SurveyPrompt.html",
    "title": "Class SurveyPrompt | Geolocation",
    "keywords": "Class SurveyPrompt Inheritance object ComponentBase SurveyPrompt Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.IComponent.Attach(RenderHandle) ComponentBase.SetParametersAsync(ParameterView) ComponentBase.IHandleEvent.HandleEventAsync(EventCallbackWorkItem, object) ComponentBase.IHandleAfterRender.OnAfterRenderAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Geolocation.UI.Shared Assembly: Geolocation.UI.dll Syntax public class SurveyPrompt : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Name Type Description Title string Properties Name Type Description BuildRenderTree(RenderTreeBuilder) Properties | Improve this Doc View Source Title Declaration [Parameter] public string? Title { get; set; } Property Value Type Description string Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder) Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "README.html": {
    "href": "README.html",
    "title": "Geolocation | Geolocation",
    "keywords": "Geolocation"
  },
  "src/Geolocation.Client/swagger.html": {
    "href": "src/Geolocation.Client/swagger.html",
    "title": "Geolocation.App | Geolocation",
    "keywords": "Geolocation.App Addresses | Improve this Doc View Source AddressesGET Список адресов. Request GET /Addresses Responses Status Code Type Description Samples default ProblemDetails Error 200 IAddress [] Success | Improve this Doc View Source AddressesPOST Список адресов. Request POST /Addresses Parameters Name In Type Default Notes body body AddressDto Responses Status Code Type Description Samples default ProblemDetails Error 200 Success Geolocation | Improve this Doc View Source GeolocationGET Возвращает всю информацию об адресе по координатам. Работает для домов, улиц и городов. Request GET /Geolocation[?lat&lon] Parameters Name In Type Default Notes lat query Географическая широта lon query Географическая долгота Responses Status Code Type Description Samples default ProblemDetails Error 200 AddressDto Success Definitions ProblemDetails Type Name Description type string title string status integer (int32) detail string instance string example { \"Type\": \"Microsoft.AspNetCore.Http.BadHttpRequestException\", \"Title\": \"One or more validation errors occurred\", \"Status\": 400, \"Extensions\": {} } IAddress Type Name Description correlationId string (uuid) value string unrestrictedValue string postalCode string country string kladrId string type AddressType Тип адреса example [{ \"CorrelationId\": \"92f522d0-b88c-4299-a7d0-43b70600f939\", \"Value\": \"Белгородская обл, г Старый Оскол, мкр Дубрава квартал 3\", \"UnrestrictedValue\": \"309502, Белгородская обл, г Старый Оскол, мкр Дубрава квартал 3\", \"PostalCode\": \"309502\", \"Country\": \"Россия\", \"KladrId\": \"3100000200004070007\", \"Type\": \"Work\" }] AddressType Тип адреса Enum Values Name Registration Home Work AddressDto Type Name Description correlationId string (uuid) value string unrestrictedValue string postalCode string country string kladrId string type AddressType Тип адреса example { \"CorrelationId\": \"92f522d0-b88c-4299-a7d0-43b70600f939\", \"Value\": \"Белгородская обл, г Старый Оскол, мкр Дубрава квартал 3\", \"UnrestrictedValue\": \"309502, Белгородская обл, г Старый Оскол, мкр Дубрава квартал 3\", \"PostalCode\": \"309502\", \"Country\": \"Россия\", \"KladrId\": \"3100000200004070007\", \"Type\": \"Work\" }"
  }
}